{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x28fAFd3fe2e74E75acd64644e62aB9D88f8629D1",
    "txHash": "0x975236a3d6c89c95b79382f319fc08fe195ee76369baaf09243773f76cc4ecf2",
    "deployTransaction": {
      "hash": "0x975236a3d6c89c95b79382f319fc08fe195ee76369baaf09243773f76cc4ecf2",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xa02E9e63A828a08f29eb75b1bBc0A9aFe7A97EfA",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x59682f24"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682f00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682f24"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 417,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x24bf63116854405ef4cd166ed2c9d384aef0c282515e9ab5d71bebf5321ba5a8",
      "s": "0x2e8ed564774cfd3ad719d8b0ee1367e0d590c20b561fb9e1cf4de36ff3f2efcb",
      "v": 1,
      "creates": "0x28fAFd3fe2e74E75acd64644e62aB9D88f8629D1",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x4F1298f5795e319ED799d7C24e2b69A34eD71A04",
      "txHash": "0x6071782104b998fc06c0889e81ac19208789805d2072d01953de7080e7812937",
      "kind": "transparent"
    },
    {
      "address": "0xA6849D4f182B6700C9BCAE30c235bb4c202e3025",
      "txHash": "0x90b3fa8cfb2555931bf4497a6d5f3f6873a2441f2eb9faf6551d45dee57d40e5",
      "kind": "transparent"
    },
    {
      "address": "0x3E7CF8f4Eb0238FBaDE6a2bD612A936c93c19d14",
      "txHash": "0xcd29b3da722882d50f84e97dbff566d2dbb656a766df34f075d9cdbaa87ed57f",
      "kind": "transparent"
    },
    {
      "address": "0x03269545b943BE34D19B3dB5284AD3bcF88556ab",
      "txHash": "0x10e17168d875e826d33c63fbc560c9a64d87c52f8c13f99b1f441b6a2d58fb4c",
      "kind": "transparent"
    },
    {
      "address": "0x6C31Eb5e823F25d9a1a59246EdD71bbEdC3261EC",
      "txHash": "0x93505a95b438b088b5bc9791439aff69f38fbfecf00154ba5773d3941c38a545",
      "kind": "transparent"
    },
    {
      "address": "0x60f3c1d1878B783F2035c5Fa1CBb3ADca2c1c0E2",
      "txHash": "0x35f7b2d800f7692875ce2e680400a57c4d27aca0bcbd7f9b630206c22a7ab159",
      "kind": "transparent"
    },
    {
      "address": "0x1396Fb693D6a07D9FA87d9f116c0c82f6C3C5D1C",
      "txHash": "0x3787d1582e28d92874f1b61b862143f6e81062aadf5d2d11bda0cfbd0a3fb5d2",
      "kind": "transparent"
    },
    {
      "address": "0xC2D9B4aaE5357a31407317e605582D515aA5e3f2",
      "txHash": "0x8c1475cb74dd62a0260b83fa72abe28bb6d96d6dc47a6e6b791fa4282f3502b1",
      "kind": "transparent"
    },
    {
      "address": "0xED8273562Bd87afD26A7B8112EA1c0B1c2980e5C",
      "txHash": "0x23e7ee37c264fdf72122985f0618ac02074f77224fbadb130f59b90a4fa1c9d5",
      "kind": "beacon"
    },
    {
      "address": "0xFe2b128CD4777D8E574047869be2BE64f792D082",
      "txHash": "0x76c855353c7471defe3b9067e2dd9b02e65b52ce7ae6f8ba76e2c5a575f7a255",
      "kind": "beacon"
    },
    {
      "address": "0x6b1B914f8756fd1d61Cb9b59c3D757413da2b441",
      "txHash": "0xea22b2a047be8f18cd2c5dc0a4774046bda158f74367a94e3d7a9e66f290b577",
      "kind": "transparent"
    },
    {
      "address": "0xDD4b85A2F25Caa431A38356e0237e58C66A5b361",
      "txHash": "0x3c5619d4b7bdb56c19798b3a27d44f642611c5d8296be7e4dfb25ccd8efd24c8",
      "kind": "transparent"
    },
    {
      "address": "0xC101992148CCA234f484A2D639c422e732301D84",
      "txHash": "0xe35adc98c0ed7170e5d7e7f953feb6b0a161fb92c38db1d6601fc36e165e7a77",
      "kind": "transparent"
    },
    {
      "address": "0x98a94c4A41A1c57B74E3Da9C7d16ba5164BbB3Cd",
      "txHash": "0xe3ce8d94d5c1cf4722c16a26e55d4dc66e12c70d3b9633845aea773d732fef38",
      "kind": "transparent"
    },
    {
      "address": "0xe5a02e7c436759830106Fee25d183a01393Ff5E3",
      "txHash": "0x7820227f50a27da0a7ee78da1d26602f4f5e6791d85cdb9629473a5823a70178",
      "kind": "transparent"
    },
    {
      "address": "0xC44E35e85EdCA478bf6510dE81D224356b446f11",
      "txHash": "0x13b8df22ae3aedcde1da5895bc66123380e9e554bc1faa6feac4fede2467e762",
      "kind": "transparent"
    },
    {
      "address": "0x2E214d255E2a74d090718fe25ABeb05b78a21f56",
      "txHash": "0x417b4c52c19b6c0c8217b652e2632ac719bd845fa8518691000a27a6781fe67c",
      "kind": "transparent"
    },
    {
      "address": "0x3eDEF9A701591aBE73840Bbeb1785875A893255C",
      "txHash": "0x66e6afdc6e58c664f561ba8714e40f558ba9a9455cb5f5544b124077b80d5a0d",
      "kind": "beacon"
    },
    {
      "address": "0x63cC464102BD869B6Fe1093bad8392F47A4f0040",
      "txHash": "0xcac73a24412b86f75ea5d48ce1686eb13ec6bf158e2e8c2d5c79e9a244b7e192",
      "kind": "beacon"
    },
    {
      "address": "0x2B32717Ffe1EDe81092B893B0b7E88CA72266E0D",
      "txHash": "0x728eeb23a7774b049d14ce4b44e854f6380e4882a4eeffc6a3fd4fe303fa98b5",
      "kind": "transparent"
    },
    {
      "address": "0xd7B6AC1350da4A7Bf298567ec0E322a2aBEAB735",
      "txHash": "0x3b9e2bb15220e0d99405c7c4e7a27fdfd9650d9f800dfb2ef26513a1fca16ec8",
      "kind": "transparent"
    },
    {
      "address": "0x5c1e8FAe208B97B89d6410d133bffbC9e9579926",
      "txHash": "0x0ae1da012d100551212c084f913108b0442c8568cfd2060575655e43bec4bdb8",
      "kind": "transparent"
    },
    {
      "address": "0x2e5Cb4cc506CD8BcEF3a428cE19A2e213C03eF54",
      "txHash": "0xedb1cf11596571efe3a123f7b9e4c0427fb93b91fba8b4998626284305d6322e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "568205b059d104d23927b3d8a7a83436da9be1c9c8691c48c5cc567884ca30e4": {
      "address": "0x828c4d3A0d0996475F5357488bb06aB16740B0F1",
      "txHash": "0x58db319b274ab93bd0a8d1b7005c748d69f6d67c5f54d6218c91d52fb41dc00c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ConverterCore",
            "label": "CONVERTER_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Converter/ConverterCore.sol:9"
          },
          {
            "contract": "ConverterCore",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Converter/ConverterCore.sol:11"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ffb7ab35770dd56ba02600a9a3e54a49fb45c978a3f774712b8e4b91f785aa5e": {
      "address": "0x4256Ce6881417E3C8440Dad5Dc768827532A8711",
      "txHash": "0xc3c7ac7552db943d364659f0a507c357b407d9d13fbf3c353dac903d1079b007",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "LPoolCore",
            "label": "POOL_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/LPool/LPoolCore.sol:9"
          },
          {
            "contract": "LPoolCore",
            "label": "converter",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:11"
          },
          {
            "contract": "LPoolCore",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTToLP",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:11"
          },
          {
            "contract": "LPoolApproved",
            "label": "_LPToPT",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolApproved.sol:14"
          },
          {
            "contract": "LPoolApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/LPool/LPoolApproved.sol:16"
          },
          {
            "contract": "LPoolClaim",
            "label": "_claimed",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/LPool/LPoolClaim.sol:11"
          },
          {
            "contract": "LPoolClaim",
            "label": "_totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/LPool/LPoolClaim.sol:12"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxPercent",
            "type": "t_struct(Fraction)12665_storage",
            "src": "contracts/LPool/LPoolTax.sol:19"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxAccountSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolTax.sol:20"
          },
          {
            "contract": "LPoolInterest",
            "label": "timePerInterestApplication",
            "type": "t_uint256",
            "src": "contracts/LPool/LPoolInterest.sol:15"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMin",
            "type": "t_mapping(t_address,t_struct(Fraction)12665_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:17"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMax",
            "type": "t_mapping(t_address,t_struct(Fraction)12665_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:18"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxUtilization",
            "type": "t_mapping(t_address,t_struct(Fraction)12665_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Fraction)12665_storage)": {
            "label": "mapping(address => struct FractionMath.Fraction)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Fraction)12665_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(AddressSet)3726_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3425_storage"
              }
            ]
          },
          "t_struct(Set)3425_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "45081b584260c9d9b23ee89521df79dba395e9434d6d1c646f4cbf45c2230b2d": {
      "address": "0x53D600794D258F2493E84854d82D82A372B86e5d",
      "txHash": "0xc992d1537a3f2ea22c0acdf223b723bfc9e6529c4a4e28a449fd75cb6d585355",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OracleCore",
            "label": "ORACLE_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Oracle/OracleCore.sol:12"
          },
          {
            "contract": "OracleCore",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/Oracle/OracleCore.sol:14"
          },
          {
            "contract": "OracleCore",
            "label": "_priceDecimals",
            "type": "t_uint256",
            "src": "contracts/Oracle/OracleCore.sol:15"
          },
          {
            "contract": "OracleCore",
            "label": "_threshold",
            "type": "t_struct(Fraction)12665_storage",
            "src": "contracts/Oracle/OracleCore.sol:17"
          },
          {
            "contract": "OracleApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_struct(Approved)11574_storage)",
            "src": "contracts/Oracle/OracleApproved.sol:13"
          },
          {
            "contract": "OracleTest",
            "label": "_customPrices",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Oracle/OracleTest.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Approved)11574_storage)": {
            "label": "mapping(address => struct OracleApproved.Approved)"
          },
          "t_struct(Approved)11574_storage": {
            "label": "struct OracleApproved.Approved",
            "members": [
              {
                "label": "priceFeed",
                "type": "t_address"
              },
              {
                "label": "decimals",
                "type": "t_uint256"
              },
              {
                "label": "approved",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Fraction)12665_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4f85af1720d7a2013e1e61c3f98cc986bc18ed8995e6fb3f307b693f3fc8051": {
      "address": "0xDBAE3cAD6387A000230F495B67ff2366B00A8338",
      "txHash": "0xb0598d2eb7bf78687d710ba55ca2ce7b86ef7b23034027d8cdb3e29ace657d3c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "LPoolToken",
            "label": "TOKEN_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/LPool/Token/LPoolToken.sol:10"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a1203b69a55972d4bdad6d93a586fb85db423f5d0ba0f79a5756cb05b08b9463": {
      "address": "0x166fd8A04fb6780256a2a3211995Be8754C547a2",
      "txHash": "0x46d3ceb92a66d3995fa504bb862f58a8a48943cc219fc98679b15e58626aa63e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "LPoolCore",
            "label": "POOL_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/LPool/LPoolCore.sol:9"
          },
          {
            "contract": "LPoolCore",
            "label": "converter",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:11"
          },
          {
            "contract": "LPoolCore",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTToLP",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:11"
          },
          {
            "contract": "LPoolApproved",
            "label": "_LPToPT",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolApproved.sol:14"
          },
          {
            "contract": "LPoolApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/LPool/LPoolApproved.sol:16"
          },
          {
            "contract": "LPoolClaim",
            "label": "_claimed",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/LPool/LPoolClaim.sol:11"
          },
          {
            "contract": "LPoolClaim",
            "label": "_totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/LPool/LPoolClaim.sol:12"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxPercent",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/LPool/LPoolTax.sol:19"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxAccountSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolTax.sol:20"
          },
          {
            "contract": "LPoolInterest",
            "label": "timePerInterestApplication",
            "type": "t_uint256",
            "src": "contracts/LPool/LPoolInterest.sol:15"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMin",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:17"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMax",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:18"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxUtilization",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Fraction)12673_storage)": {
            "label": "mapping(address => struct FractionMath.Fraction)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(AddressSet)3726_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3425_storage"
              }
            ]
          },
          "t_struct(Set)3425_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e29057dc0fc5d4127b587db93c927f58cfc332a64be9884b0839fb0a5c55d867": {
      "address": "0x99a21cb03F6A1B0Fe6A57991E6c81E04b7fA7F31",
      "txHash": "0x45ef1f9e435e22d11506bb344edd982ddb97a6210bfea0215402d66accc98101",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "MarginCore",
            "label": "MARGIN_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Margin/MarginCore.sol:9"
          },
          {
            "contract": "MarginCore",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/Margin/MarginCore.sol:11"
          },
          {
            "contract": "MarginCore",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/Margin/MarginCore.sol:12"
          },
          {
            "contract": "MarginApproved",
            "label": "_collateralTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Margin/MarginApproved.sol:7"
          },
          {
            "contract": "MarginApproved",
            "label": "_borrowTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Margin/MarginApproved.sol:8"
          },
          {
            "contract": "MarginApproved",
            "label": "_approvedCollateralTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Margin/MarginApproved.sol:10"
          },
          {
            "contract": "MarginApproved",
            "label": "_approvedBorrowTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Margin/MarginApproved.sol:11"
          },
          {
            "contract": "MarginPool",
            "label": "_totalBorrowed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Margin/MarginPool.sol:7"
          },
          {
            "contract": "MarginPool",
            "label": "_totalCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Margin/MarginPool.sol:8"
          },
          {
            "contract": "MarginAccount",
            "label": "_accounts",
            "type": "t_mapping(t_address,t_struct(Account)8260_storage)",
            "src": "contracts/Margin/MarginAccount.sol:26"
          },
          {
            "contract": "MarginLevel",
            "label": "_maxLeverage",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/Margin/MarginLevel.sol:13"
          },
          {
            "contract": "MarginLimits",
            "label": "minCollateralPrice",
            "type": "t_uint256",
            "src": "contracts/Margin/MarginLimits.sol:9"
          },
          {
            "contract": "MarginBorrowers",
            "label": "_accountSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/Margin/MarginBorrowers.sol:9"
          },
          {
            "contract": "MarginLongLiquidateCore",
            "label": "_liquidationFeePercent",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/Margin/MarginLong/MarginLongLiquidateCore.sol:13"
          }
        ],
        "types": {
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)3726_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3425_storage"
              }
            ]
          },
          "t_struct(Set)3425_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(Account)8260_storage)": {
            "label": "mapping(address => struct MarginAccount.Account)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Account)8260_storage": {
            "label": "struct MarginAccount.Account",
            "members": [
              {
                "label": "collateral",
                "type": "t_struct(AddressSet)3726_storage"
              },
              {
                "label": "collateralAmounts",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "borrowed",
                "type": "t_struct(AddressSet)3726_storage"
              },
              {
                "label": "borrowedAmounts",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "initialBorrowPrice",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "initialBorrowTime",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "accumulatedInterest",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "hasBorrowed",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c64366dae8148d39f56c9992b4debc7ab80cdba0d8b19c65efa2ba06176def98": {
      "address": "0xAa3966c739c555938853b348740Dc755e82eE316",
      "txHash": "0x313b0fb2221db4fce0e8a30da59f4061a2aa0c8f4f1b39e31d751167593cc347",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ResolverCore",
            "label": "RESOLVER_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Gelato/ResolverCore.sol:9"
          },
          {
            "contract": "ResolverCore",
            "label": "taskTreasury",
            "type": "t_address",
            "src": "contracts/Gelato/ResolverCore.sol:11"
          },
          {
            "contract": "ResolverCore",
            "label": "depositReceiver",
            "type": "t_address",
            "src": "contracts/Gelato/ResolverCore.sol:12"
          },
          {
            "contract": "ResolverCore",
            "label": "ethAddress",
            "type": "t_address",
            "src": "contracts/Gelato/ResolverCore.sol:13"
          },
          {
            "contract": "ResolverCore",
            "label": "converter",
            "type": "t_address",
            "src": "contracts/Gelato/ResolverCore.sol:15"
          },
          {
            "contract": "ResolverCore",
            "label": "marginLong",
            "type": "t_address",
            "src": "contracts/Gelato/ResolverCore.sol:16"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b37aff3d1eff908d2f27fc449bf8943f10c511a7bf8dd32d7f2341afdcbfc3c": {
      "address": "0xd57fdF96117DF189e0fcdFB273DaeBaEE9351cA2",
      "txHash": "0x825fcc2d893f216958d099e3a646770feef62ab40d646f7b68a8d1a0823b7c22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "FlashLenderCore",
            "label": "FLASHLENDER_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/FlashLender/FlashLenderCore.sol:13"
          },
          {
            "contract": "FlashLenderCore",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/FlashLender/FlashLenderCore.sol:15"
          },
          {
            "contract": "FlashLenderCore",
            "label": "_feePercent",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/FlashLender/FlashLenderCore.sol:17"
          },
          {
            "contract": "FlashLenderCore",
            "label": "CALLBACK_SUCCESS",
            "type": "t_bytes32",
            "src": "contracts/FlashLender/FlashLenderCore.sol:19"
          },
          {
            "contract": "FlashLenderApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/FlashLender/FlashLenderApproved.sol:7"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea694ba0cd4cb28e24f78b778ea508dae7a625e3a6d9eebd94e85411d38dee38": {
      "address": "0x026ba2581236A974967Dd5ECf8998f295C336fcD",
      "txHash": "0x2e4f5ddfdc4a4e9fa0d80706f4c9fef11e8930fd88cf77b9e36189c1069a679a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e46f97b0618c0c54c8c149a908407a0744e9f1798809428f6d9284bcd67a7c1": {
      "address": "0xEEF45b5861aC7Eaf0aa93A76B55D46567C62eD42",
      "txHash": "0xb5fce7f39199d9f34f1d33725ef5660d7fdd9f80abef43544e64635134fbf2f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OracleCore",
            "label": "ORACLE_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Oracle/OracleCore.sol:12"
          },
          {
            "contract": "OracleCore",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/Oracle/OracleCore.sol:14"
          },
          {
            "contract": "OracleCore",
            "label": "_priceDecimals",
            "type": "t_uint256",
            "src": "contracts/Oracle/OracleCore.sol:15"
          },
          {
            "contract": "OracleCore",
            "label": "_threshold",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/Oracle/OracleCore.sol:17"
          },
          {
            "contract": "OracleApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_struct(Approved)11582_storage)",
            "src": "contracts/Oracle/OracleApproved.sol:13"
          },
          {
            "contract": "OracleTest",
            "label": "_customPrices",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Oracle/OracleTest.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Approved)11582_storage)": {
            "label": "mapping(address => struct OracleApproved.Approved)"
          },
          "t_struct(Approved)11582_storage": {
            "label": "struct OracleApproved.Approved",
            "members": [
              {
                "label": "priceFeed",
                "type": "t_address"
              },
              {
                "label": "decimals",
                "type": "t_uint256"
              },
              {
                "label": "approved",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
