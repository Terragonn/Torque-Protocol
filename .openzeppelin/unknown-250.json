{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x71d179D466fB08780eC41AF6D06Bb6846Aaa9f26",
    "txHash": "0xbe64cfbaa4ed07083d5e06b0e4a44cb6fb7feb0778f5354cc756b91e57ff3d3d",
    "deployTransaction": {
      "hash": "0xbe64cfbaa4ed07083d5e06b0e4a44cb6fb7feb0778f5354cc756b91e57ff3d3d",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x2eF15adAFA815Ca7A5ef307FC915EC0006EA64C7",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x667a266200"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 73,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x6a13bafef16a0ff33a4f848d8e05bb58552e121a4afe55c10a067103b7b50124",
      "s": "0x4afccdab7f0a4527e9e4ee3aca11b33ca64d91a121c134ec7e3cca7c0a1c103c",
      "v": 535,
      "creates": "0x71d179D466fB08780eC41AF6D06Bb6846Aaa9f26",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xE80Ac0199065D8577E995c480d4837464f518498",
      "txHash": "0xdb7d71b701006dabe99d9880f0a3d3ebc7a82f192ce5c70fd229900fa1d809e8",
      "kind": "transparent"
    },
    {
      "address": "0xD488922523A6F658004d9dD886bE45A3968847A7",
      "txHash": "0x6166eeff089235ae86a04993f35a23f8a6a23ba75a59dc47293fee4963a88c50",
      "kind": "transparent"
    },
    {
      "address": "0x52584d2f5cbde6b924352484e8E416d593744977",
      "txHash": "0xba75b54418e0304b7ebfa671d2225eb2f61ffb3ad1798bbe27f9f7d41b621bec",
      "kind": "transparent"
    },
    {
      "address": "0x17177d099F1f88ade6E53140916Dd66E1f118710",
      "txHash": "0xeabaf6257071f96079d9ca2e864676f7753d95cdde560ab96c41075af429486e",
      "kind": "beacon"
    },
    {
      "address": "0x21d5765B3aff039Ea20317c866DbB19A09Dc1c3f",
      "txHash": "0x54b7295413640581cf0a37ed1ccff52fc651321fe87ed5ebcd1a92014302b9e1",
      "kind": "beacon"
    },
    {
      "address": "0x58576c024A5aBD143e19de74daEd407abaCDbe4b",
      "txHash": "0x357a88901c6a2cdc474f078936b0f92a5c354b5089e546d47ab3be25bd35622b",
      "kind": "beacon"
    },
    {
      "address": "0x5BfCdFd50a752d130a0730add0555efDCb3f3038",
      "txHash": "0x4db3860c1ef1948c5473b5d016b4440a5e7b2f3461bdb4b0d7794977a14a7613",
      "kind": "beacon"
    },
    {
      "address": "0xe51911db82099c730447B6cecB5c19Fdb5A3eaCA",
      "txHash": "0xc34c5bdbaebf0606af3ea39e5b54f0bf39682f94e843dda2c209b691fac81607",
      "kind": "beacon"
    },
    {
      "address": "0xCd88748Df4d75AB0e4088daf4c50838dAdc355ba",
      "txHash": "0x1d67662a6d6f05429fa149a94311cff22fb9fcf1560812d15971047e63e6a9f3",
      "kind": "beacon"
    }
  ],
  "impls": {
    "568205b059d104d23927b3d8a7a83436da9be1c9c8691c48c5cc567884ca30e4": {
      "address": "0x8ab0763cE4312028A78dB0Ef0302bb6C7d408258",
      "txHash": "0x887be274ea95c925acbcf673a01ed23969548de400d2134138e738d59f70c2bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ConverterCore",
            "label": "CONVERTER_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Converter/ConverterCore.sol:9"
          },
          {
            "contract": "ConverterCore",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Converter/ConverterCore.sol:11"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "512441c7e6e330f9f5ea477664b2c6de7aef9062f651eafc06950294fb4e1fa4": {
      "address": "0x3D9D5D16a8A01C6695116D7014517B8f70010083",
      "txHash": "0xa03ba88003eca282d68ca0279e14f3b34539a47061b675efcf94253fafdc1b2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "OracleCore",
            "label": "ORACLE_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/Oracle/OracleCore.sol:12"
          },
          {
            "contract": "OracleCore",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/Oracle/OracleCore.sol:14"
          },
          {
            "contract": "OracleCore",
            "label": "_priceDecimals",
            "type": "t_uint256",
            "src": "contracts/Oracle/OracleCore.sol:15"
          },
          {
            "contract": "OracleCore",
            "label": "_threshold",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/Oracle/OracleCore.sol:17"
          },
          {
            "contract": "OracleApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_struct(Approved)11582_storage)",
            "src": "contracts/Oracle/OracleApproved.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Approved)11582_storage)": {
            "label": "mapping(address => struct OracleApproved.Approved)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Approved)11582_storage": {
            "label": "struct OracleApproved.Approved",
            "members": [
              {
                "label": "priceFeed",
                "type": "t_address"
              },
              {
                "label": "decimals",
                "type": "t_uint256"
              },
              {
                "label": "approved",
                "type": "t_bool"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a1203b69a55972d4bdad6d93a586fb85db423f5d0ba0f79a5756cb05b08b9463": {
      "address": "0x4613Db079073E56dfe0766Bc06068201F79861fa",
      "txHash": "0x9941847723635c75e352e382fd2b2285ecbe1bbbd7c1a87f13c5ddcd590f28f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "LPoolCore",
            "label": "POOL_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/LPool/LPoolCore.sol:9"
          },
          {
            "contract": "LPoolCore",
            "label": "converter",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:11"
          },
          {
            "contract": "LPoolCore",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/LPool/LPoolCore.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTToLP",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:11"
          },
          {
            "contract": "LPoolApproved",
            "label": "_LPToPT",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/LPool/LPoolApproved.sol:12"
          },
          {
            "contract": "LPoolApproved",
            "label": "_PTSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolApproved.sol:14"
          },
          {
            "contract": "LPoolApproved",
            "label": "_approved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/LPool/LPoolApproved.sol:16"
          },
          {
            "contract": "LPoolClaim",
            "label": "_claimed",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/LPool/LPoolClaim.sol:11"
          },
          {
            "contract": "LPoolClaim",
            "label": "_totalClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/LPool/LPoolClaim.sol:12"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxPercent",
            "type": "t_struct(Fraction)12673_storage",
            "src": "contracts/LPool/LPoolTax.sol:19"
          },
          {
            "contract": "LPoolTax",
            "label": "_taxAccountSet",
            "type": "t_struct(AddressSet)3726_storage",
            "src": "contracts/LPool/LPoolTax.sol:20"
          },
          {
            "contract": "LPoolInterest",
            "label": "timePerInterestApplication",
            "type": "t_uint256",
            "src": "contracts/LPool/LPoolInterest.sol:15"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMin",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:17"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxInterestMax",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:18"
          },
          {
            "contract": "LPoolInterest",
            "label": "_maxUtilization",
            "type": "t_mapping(t_address,t_struct(Fraction)12673_storage)",
            "src": "contracts/LPool/LPoolInterest.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Fraction)12673_storage)": {
            "label": "mapping(address => struct FractionMath.Fraction)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Fraction)12673_storage": {
            "label": "struct FractionMath.Fraction",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint256"
              },
              {
                "label": "denominator",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(AddressSet)3726_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3425_storage"
              }
            ]
          },
          "t_struct(Set)3425_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f4f85af1720d7a2013e1e61c3f98cc986bc18ed8995e6fb3f307b693f3fc8051": {
      "address": "0x9B20dFB24EdF41333f79fbd6D4a6fa32a949D2b7",
      "txHash": "0x21f80fd1beaad8a149b50d9b9401f9b3484e1d9563680e6ac61dc121ee08226e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "LPoolToken",
            "label": "TOKEN_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/LPool/Token/LPoolToken.sol:10"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
