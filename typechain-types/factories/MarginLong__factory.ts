/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarginLong, MarginLongInterface } from "../MarginLong";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RepayAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resetter",
        type: "address",
      },
    ],
    name: "Reset",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowingAccounts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedBorrowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedCollateral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidateAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "marginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "maxLeverageReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCollateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract LPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "removeCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "repayAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repayAccountAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resetAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resettable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedBorrowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    name: "setLiquidationFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
    ],
    name: "setMaxLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
    ],
    name: "setMinCollateralPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minMarginLevelNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelDenominator_",
        type: "uint256",
      },
    ],
    name: "setMinMarginLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "sufficientCollateralPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "totalBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
    ],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200375538038062003755833981016040819052620000349162000106565b8181858589898d8d62000047336200009d565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055600891909155600955600a91909155600b55600e91909155600f55506200017c9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010357600080fd5b50565b600080600080600080600080610100898b0312156200012457600080fd5b88516200013181620000ed565b60208a01519098506200014481620000ed565b60408a015160608b015160808c015160a08d015160c08e015160e0909e01519c9f949e50929c919b909a509198509650945092505050565b6135c9806200018c6000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80637e059b221161015c578063b4929721116100ce578063d8459b4511610087578063d8459b45146105fd578063e2e1ca2b14610610578063e880f13914610639578063f2fde38b14610665578063f5af8d1114610678578063ffec70af1461068b57600080fd5b8063b492972114610596578063b64c74041461059e578063ca3134f6146105b1578063cc218ece146105c4578063d3127e63146105d7578063d3eec404146105ea57600080fd5b80638da5cb5b116101205780638da5cb5b14610530578063916b6c5b14610541578063a4c2c9c514610554578063ac436bdf14610567578063ae3302c21461057a578063b0a02abe1461058357600080fd5b80637e059b22146104b75780637e773d01146104e0578063813c2302146104e9578063876467f8146104fc5780638ac5d4a31461050f57600080fd5b80634eb72012116101f55780636fc2d3c6116101b95780636fc2d3c614610428578063706f1ada1461043b578063715018a61461044e5780637adbf973146104565780637c9ff9eb146104695780637dc0d1d0146104a457600080fd5b80634eb720121461039b57806350711be9146103a657806366dad8f4146103d45780636847e50b146104005780636d75b9ee1461041557600080fd5b8063172fc1f211610247578063172fc1f21461032057806325b69c0c146103335780632becebd21461034f5780632dbaacdc146103625780634437152a146103755780634b8a35291461038857600080fd5b806303f5aaad1461028457806308b1cb23146102ac5780630f9b628e146102cd57806314ace5bb146102e257806316f0115b146102f5575b600080fd5b61029761029236600461308a565b61069e565b60405190151581526020015b60405180910390f35b6102bf6102ba3660046130c3565b6106b5565b6040519081526020016102a3565b6102e06102db3660046130e0565b610715565b005b6102e06102f03660046130e0565b610753565b600154610308906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b61029761032e3660046130c3565b610788565b6008546009545b604080519283526020830191909152016102a3565b61029761035d3660046130c3565b61079e565b6102976103703660046130c3565b6107d8565b6102e06103833660046130c3565b61081c565b6102e0610396366004613102565b610868565b600e54600f5461033a565b6102976103b43660046130c3565b6001600160a01b0316600090815260076020526040902060080154151590565b6102976103e23660046130c3565b6001600160a01b031660009081526003602052604090205460ff1690565b610408610b33565b6040516102a3919061312e565b6102e0610423366004613102565b610b44565b6102e0610436366004613268565b610c4e565b6102bf61044936600461308a565b610cfd565b6102e0610d2d565b6102e06104643660046130c3565b610d63565b6102bf61047736600461308a565b6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b600254610308906001600160a01b031681565b6102bf6104c53660046130c3565b6001600160a01b031660009081526006602052604090205490565b6102bf600a5481565b61033a6104f73660046130c3565b610daf565b6102e061050a366004613102565b610df6565b61052261051d3660046130c3565b610fa1565b6040516102a392919061332a565b6000546001600160a01b0316610308565b6102e061054f3660046130c3565b611132565b6102e0610562366004613268565b611278565b6102bf6105753660046130c3565b611322565b6102bf600b5481565b6102bf61059136600461308a565b611377565b6102e06113a7565b6102bf6105ac3660046130c3565b611462565b6105226105bf3660046130c3565b6114b7565b6102bf6105d236600461308a565b6115cc565b6102e06105e53660046133ae565b6115fc565b6102e06105f83660046133ae565b61162b565b6102bf61060b3660046130c3565b61165a565b6102bf61061e3660046130c3565b6001600160a01b031660009081526005602052604090205490565b6102976106473660046130c3565b6001600160a01b031660009081526004602052604090205460ff1690565b6102e06106733660046130c3565b6116ae565b6102bf61068636600461308a565b611749565b6102976106993660046130c3565b61184e565b6000806106ab8484611377565b1190505b92915050565b6001600160a01b038116600090815260076020526040812081805b600183015481101561070d576106f96106f26106ec85846118c4565b876118f7565b839061198a565b915080610705816133dd565b9150506106d0565b509392505050565b6000546001600160a01b031633146107485760405162461bcd60e51b815260040161073f906133f8565b60405180910390fd5b600891909155600955565b6000546001600160a01b0316331461077d5760405162461bcd60e51b815260040161073f906133f8565b600e91909155600f55565b6000600a54610796836106b5565b101592915050565b6000806107aa836106b5565b905060006107b784611462565b9050806107cf600b548461199690919063ffffffff16565b10949350505050565b6001600160a01b038116600090815260076020526040812060080154151580156106af57506108068261079e565b806106af575061081582610788565b1592915050565b6000546001600160a01b031633146108465760405162461bcd60e51b815260040161073f906133f8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b8161088b816001600160a01b031660009081526004602052604090205460ff1690565b6108fd5760405162461bcd60e51b815260206004820152603960248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420626f60448201527f72726f77656420746f6b656e73206d6179206265207573656400000000000000606482015260840161073f565b610907833361069e565b61093c573360009081526007602081815260408084206001600160a01b03881685529092019052902043905561093c336119a2565b600154604051635569f64b60e11b81526001600160a01b039091169063aad3ec969061096e908690869060040161342d565b600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b505050506109bf836109b9846109b3876105913390565b9061198a565b336119ad565b60025460405163b1d5e1b960e01b81526000916001600160a01b03169063b1d5e1b9906109f2908790879060040161342d565b60206040518083038186803b158015610a0a57600080fd5b505afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190613446565b9050610a5c84610a56836109b38333610cfd565b33611ae2565b610a65336107d8565b158015610a785750610a763361184e565b155b610aea5760405162461bcd60e51b815260206004820152603f60248201527f4d617267696e4c6f6e67426f72726f773a20426f72726f77696e67206465736960448201527f72656420616d6f756e742070757473206163636f756e74206174207269736b00606482015260840161073f565b336001600160a01b03167f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b528585604051610b2592919061342d565b60405180910390a250505050565b6060610b3f600c611b12565b905090565b81610b67816001600160a01b031660009081526003602052604090205460ff1690565b610bd95760405162461bcd60e51b815260206004820152603b60248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420636f60448201527f6c6c61746572616c20746f6b656e73206d617920626520757365640000000000606482015260840161073f565b610bee6001600160a01b038416333085611b78565b610c0683610c00846109b383336115cc565b33611be9565b336001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f8484604051610c4192919061342d565b60405180910390a2505050565b6000546001600160a01b03163314610c785760405162461bcd60e51b815260040161073f906133f8565b60005b8251811015610cf857818181518110610c9657610c9661345f565b602002602001015160036000858481518110610cb457610cb461345f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610cf0816133dd565b915050610c7b565b505050565b6001600160a01b038082166000908152600760209081526040808320938616835260069093019052205492915050565b6000546001600160a01b03163314610d575760405162461bcd60e51b815260040161073f906133f8565b610d616000611ce4565b565b6000546001600160a01b03163314610d8d5760405162461bcd60e51b815260040161073f906133f8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000610dbd84611462565b90506000610dca85611322565b9050610de1610dd8866106b5565b6109b38761165a565b610deb838361198a565b935093505050915091565b610e0082336115cc565b811115610e755760405162461bcd60e51b815260206004820152603e60248201527f4d617267696e436f6c6c61746572616c3a2043616e6e6f742072656d6f76652060448201527f6d6f7265207468616e20617661696c61626c6520636f6c6c61746572616c0000606482015260840161073f565b610e8d82610c0083610e8783336115cc565b90611d34565b610e9e610e99336107d8565b611d40565b610eaa610e993361184e565b610eb3336107d8565b158015610ec65750610ec43361184e565b155b610f465760405162461bcd60e51b815260206004820152604560248201527f4d617267696e436f6c6c61746572616c3a205769746864726177696e6720646560448201527f736972656420636f6c6c61746572616c2070757473206163636f756e74206174606482015264207269736b60d81b608482015260a40161073f565b610f5a6001600160a01b0383163383611d81565b336001600160a01b03167f367be65505e5aff90e7e646744b5f75280ec6d79a0e78690f6020b875a03bc128383604051610f9592919061342d565b60405180910390a25050565b606080610fad8361184e565b6110185760405162461bcd60e51b815260206004820152603660248201527f4d617267696e4c6f6e674c69717569646174653a2054686973206163636f756e6044820152751d0818d85b9b9bdd081899481b1a5c5d5a59185d195960521b606482015260840161073f565b6000611023846106b5565b9050600080611035600e54600f549091565b909250905060006110508261104a8686611996565b90611da0565b905060008061105f838a611dac565b9150915060005b82518110156110d2576110c0335b8383815181106110865761108661345f565b60200260200101518584815181106110a0576110a061345f565b60200260200101516001600160a01b0316611d819092919063ffffffff16565b806110ca816133dd565b915050611066565b506110dc89611e20565b6001600160a01b0389167facd74f5a0eb0d086de0eebe2d1e70d5742838c88cb2cf492fc201d39e056f7e0335b6040516001600160a01b03909116815260200160405180910390a2909890975095505050505050565b61113c813361069e565b6111b0576040805162461bcd60e51b81526020600482015260248101919091527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e606482015260840161073f565b6111ba8133611e32565b6111c3336107d8565b156112365760405162461bcd60e51b815260206004820152603760248201527f4d617267696e4c6f6e6752657061793a205265706179696e6720706f7369746960448201527f6f6e2070757473206163636f756e74206174207269736b000000000000000000606482015260840161073f565b604080516001600160a01b0383168152905133917f7d361c02aa3e26ac9383eca42a9b4f42433e252882bfb806e8b76869b815250f919081900360200190a250565b6000546001600160a01b031633146112a25760405162461bcd60e51b815260040161073f906133f8565b60005b8251811015610cf8578181815181106112c0576112c061345f565b6020026020010151600460008584815181106112de576112de61345f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061131a816133dd565b9150506112a5565b60008061132e83611e87565b90506000805b825181101561070d576113636106f28483815181106113555761135561345f565b602002602001015187611749565b91508061136f816133dd565b915050611334565b6001600160a01b038082166000908152600760209081526040808320938616835260059093019052205492915050565b6113b0336103b4565b61142c5760405162461bcd60e51b815260206004820152604160248201527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e6064820152607360f81b608482015260a40161073f565b61143533611eae565b60405133907f2a5e2bc4fa361e17232a0638ac48c9dd4aed21e3241a5bac60bb30f4d505344690600090a2565b60008061146e83611e87565b90506000805b825181101561070d576114a36106f28483815181106114955761149561345f565b602002602001015187610cfd565b9150806114af816133dd565b915050611474565b6060806114c3836107d8565b6115255760405162461bcd60e51b815260206004820152602d60248201527f4d617267696e4c6f6e6752657061793a2054686973206163636f756e7420636160448201526c1b9b9bdd081899481c995cd95d609a1b606482015260840161073f565b61152e83611eae565b6000611539846106b5565b905060008061154b600e54600f549091565b909250905060006115608261104a8686611996565b905060008061156f8333611dac565b9150915060005b825181101561159a5761158833611074565b80611592816133dd565b915050611576565b506001600160a01b0389167fa5df7b378f5dbf7c276ac35d5314c533b2fa1d772a893f471c41481862ec93db33611109565b6001600160a01b038082166000908152600760209081526040808320938616835260029093019052205492915050565b6000546001600160a01b031633146116265760405162461bcd60e51b815260040161073f906133f8565b600b55565b6000546001600160a01b031633146116555760405162461bcd60e51b815260040161073f906133f8565b600a55565b6001600160a01b038116600090815260076020526040812081805b600483015481101561070d5761169a6106f261169460038601846118c4565b87611ec9565b9150806116a6816133dd565b915050611675565b6000546001600160a01b031633146116d85760405162461bcd60e51b815260040161073f906133f8565b6001600160a01b03811661173d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161073f565b61174681611ce4565b50565b6000806117568484611ec9565b905060006117648585610cfd565b905060008183111561177757508161177a565b50805b6001546001600160a01b031663d0b9622c87836117bf828a6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152602483019190915260448201526064015b60206040518083038186803b15801561180c57600080fd5b505afa158015611820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118449190613446565b9695505050505050565b6001600160a01b03811660009081526007602052604081206008015461187657506000919050565b6000806118866008546009549091565b9150915060008061189686610daf565b909250905060006118a78583611996565b905060006118b58486611996565b90911015979650505050505050565b60008260010182815481106118db576118db61345f565b6000918252602090912001546001600160a01b03169392505050565b6002546000906001600160a01b031663b1d5e1b98461191681866115cc565b6040518363ffffffff1660e01b815260040161193392919061342d565b60206040518083038186803b15801561194b57600080fd5b505afa15801561195f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119839190613446565b9392505050565b60006119838284613475565b6000611983828461348d565b611746600c82611ee8565b6001600160a01b0380821660009081526007602090815260408083209387168352600584019091529020541580156119e457508215155b156119fb576119f66003820185611fae565b611a34565b6001600160a01b038416600090815260058201602052604090205415801590611a22575082155b15611a3457611a346003820185612018565b6001600160a01b0384166000908152600580830160209081526040808420549290915290912054611a8d918691611a719187916109b39190610e87565b6001600160a01b03909116600090815260056020526040902055565b6001600160a01b03841660009081526005820160205260409020546008820154611abc9185916109b391611d34565b60088201556001600160a01b039093166000908152600590930160205250604090912055565b6001600160a01b039081166000908152600760209081526040808320959093168252600690940190935290912055565b606081600101805480602002602001604051908101604052809291908181526020018280548015611b6c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b4e575b50505050509050919050565b6040516001600160a01b0380851660248301528316604482015260648101829052611be39085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612164565b50505050565b6001600160a01b038082166000908152600760209081526040808320938716835260028401909152902054158015611c2057508215155b15611c3457611c2f8185611fae565b611c6a565b6001600160a01b038416600090815260028201602052604090205415801590611c5b575082155b15611c6a57611c6a8185612018565b6001600160a01b0384166000908152600282016020908152604080832054600690925290912054611cc3918691611ca79187916109b39190610e87565b6001600160a01b03909116600090815260066020526040902055565b6001600160a01b039093166000908152600290930160205250604090912055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061198382846134ac565b60405181151560248201526117469060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b179052612236565b610cf88363a9059cbb60e01b8484604051602401611bac92919061342d565b600061198382846134c3565b6060806000611dba84612257565b90506000815167ffffffffffffffff811115611dd857611dd861317b565b604051908082528060200260200182016040528015611e01578160200160208202803683370190505b5090506000611e13878785858561227b565b5091969095509350505050565b611e2981612465565b61174681612587565b611e3c8282612606565b15611e5057611e4b8282612647565b611e5a565b611e5a8282612755565b6001600160a01b038116600090815260076020526040902060080154611e8357611e838161285b565b5050565b6001600160a01b03811660009081526007602052604090206060906106af90600301611b12565b611eb781612866565b611ec0816128dc565b6117468161285b565b6002546000906001600160a01b031663b1d5e1b9846119168186611377565b611ef28282612a8b565b15611f565760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320616c7265616479206578697360448201526d3a399034b7103a34329039b2ba1760911b606482015260840161073f565b6001828101805480830182556000828152602090200180546001600160a01b0319166001600160a01b03851617905554611f9091906134ac565b6001600160a01b039091166000908152602092909252604090912055565b611fb88282612a8b565b15611f565760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b6120228282612a8b565b6120815760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b60018281018054600092612094916134ac565b815481106120a4576120a461345f565b60009182526020808320909101546001600160a01b038581168452918690526040808420549290911680845292208190556001850180549293509091839190839081106120f3576120f361345f565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905591851681529085905260408120556001840180548061213c5761213c6134e5565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b60006121b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612aec9092919063ffffffff16565b805190915015610cf857808060200190518101906121d791906134fb565b610cf85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161073f565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b03811660009081526007602052604090206060906106af90611b12565b60005b60008611801561228e5750835182105b1561245c5760006122b88584815181106122aa576122aa61345f565b6020026020010151876115cc565b905060006122df8685815181106122d1576122d161345f565b6020026020010151886118f7565b90508781101561234b57818585815181106122fc576122fc61345f565b60200260200101818152505061232d86858151811061231d5761231d61345f565b6020026020010151600089611be9565b6123378882611d34565b975061234484600161198a565b9350612455565b60025486516000916001600160a01b0316906395f881c9908990889081106123755761237561345f565b60200260200101518b6040518363ffffffff1660e01b815260040161239b92919061342d565b60206040518083038186803b1580156123b357600080fd5b505afa1580156123c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123eb9190613446565b9050828111156123f85750815b8086868151811061240b5761240b61345f565b60200260200101818152505061244d87868151811061242c5761242c61345f565b60200260200101516124478386611d3490919063ffffffff16565b8a611be9565b50505061245c565b505061227e565b50949350505050565b600061247082611e87565b905060005b815181101561257d5760015482516001600160a01b039091169063bffe84c2908490849081106124a7576124a761345f565b60200260200101516124d28585815181106124c4576124c461345f565b602002602001015187611377565b6040518363ffffffff1660e01b81526004016124ef92919061342d565b600060405180830381600087803b15801561250957600080fd5b505af115801561251d573d6000803e3d6000fd5b505050506125468282815181106125365761253661345f565b6020026020010151600085611ae2565b61256b82828151811061255b5761255b61345f565b60200260200101516000856119ad565b80612575816133dd565b915050612475565b50611e838261285b565b600061259282612257565b9050600061259f83612b03565b90506125ab8282612bb8565b60005b8251811015611be3576125f48382815181106125cc576125cc61345f565b60200260200101518383815181106125e6576125e661345f565b602002602001015186611be9565b806125fe816133dd565b9150506125ae565b6000806126138484611ec9565b905060006126218585610cfd565b9050600061262f8686611749565b905061263b828261198a565b90921195945050505050565b60006126538383612cf2565b6001549091506001600160a01b031663bffe84c2846126728186611377565b6040518363ffffffff1660e01b815260040161268f92919061342d565b600060405180830381600087803b1580156126a957600080fd5b505af11580156126bd573d6000803e3d6000fd5b505060015460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a391506126f3908690859060040161342d565b600060405180830381600087803b15801561270d57600080fd5b505af1158015612721573d6000803e3d6000fd5b5050505061273183600084611ae2565b61273d836000846119ad565b610cf88361274f836109b387876115cc565b84611be9565b600061276082612257565b90506000815167ffffffffffffffff81111561277e5761277e61317b565b6040519080825280602002602001820160405280156127a7578160200160208202803683370190505b50905060006127b68585612d5b565b90506127c681858585600061227b565b506127d18383612bb8565b6001546001600160a01b031663bffe84c2866127ed8188611377565b6040518363ffffffff1660e01b815260040161280a92919061342d565b600060405180830381600087803b15801561282457600080fd5b505af1158015612838573d6000803e3d6000fd5b50505050612848856000866119ad565b61285485600086611ae2565b5050505050565b611746600c82612d94565b600061287182611e87565b905060005b8151811015610cf8576128a28282815181106128945761289461345f565b602002602001015184612606565b156128ca576128ca8282815181106128bc576128bc61345f565b602002602001015184612647565b806128d4816133dd565b915050612876565b60006128e782611e87565b905060006128f483612257565b90506000815167ffffffffffffffff8111156129125761291261317b565b60405190808252806020026020018201604052801561293b578160200160208202803683370190505b5090506000805b8451811015612a805760006129708683815181106129625761296261345f565b602002602001015188612d5b565b905061297f818887878761227b565b60015487519194506001600160a01b03169063bffe84c2908890859081106129a9576129a961345f565b60200260200101516129d48986815181106129c6576129c661345f565b60200260200101518b611377565b6040518363ffffffff1660e01b81526004016129f192919061342d565b600060405180830381600087803b158015612a0b57600080fd5b505af1158015612a1f573d6000803e3d6000fd5b50505050612a48868381518110612a3857612a3861345f565b60200260200101516000896119ad565b612a6d868381518110612a5d57612a5d61345f565b6020026020010151600089611ae2565b5080612a78816133dd565b915050612942565b506128548383612bb8565b6001820154600090612a9f575060006106af565b6001600160a01b0382166000818152602085905260409020546001850180549091908110612acf57612acf61345f565b6000918252602090912001546001600160a01b0316149392505050565b6060612afb8484600085612e01565b949350505050565b60606000612b1083612257565b90506000815167ffffffffffffffff811115612b2e57612b2e61317b565b604051908082528060200260200182016040528015612b57578160200160208202803683370190505b50905060005b825181101561070d57612b89838281518110612b7b57612b7b61345f565b6020026020010151866115cc565b828281518110612b9b57612b9b61345f565b602090810291909101015280612bb0816133dd565b915050612b5d565b60005b8251811015610cf8576000828281518110612bd857612bd861345f565b60200260200101511115612ce0576001548251612c45916001600160a01b031690849084908110612c0b57612c0b61345f565b6020026020010151858481518110612c2557612c2561345f565b60200260200101516001600160a01b0316612f299092919063ffffffff16565b60015483516001600160a01b03909116906347e7ef2490859084908110612c6e57612c6e61345f565b6020026020010151848481518110612c8857612c8861345f565b60200260200101516040518363ffffffff1660e01b8152600401612cad92919061342d565b600060405180830381600087803b158015612cc757600080fd5b505af1158015612cdb573d6000803e3d6000fd5b505050505b80612cea816133dd565b915050612bbb565b600080612cff8484611ec9565b90506000612d0d8585610cfd565b90506000612d1b8686611749565b6002549091506001600160a01b031663468cde7287612d3e84610e878888611d34565b6040518363ffffffff1660e01b81526004016117f492919061342d565b600080612d688484611ec9565b90506000612d768585610cfd565b90506000612d848686611749565b905061184483610e87848461198a565b612d9e8282612a8b565b6120815760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320646f6573206e6f742065786960448201526d39ba1034b7103a34329039b2ba1760911b606482015260840161073f565b606082471015612e625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161073f565b843b612eb05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161073f565b600080866001600160a01b03168587604051612ecc9190613544565b60006040518083038185875af1925050503d8060008114612f09576040519150601f19603f3d011682016040523d82523d6000602084013e612f0e565b606091505b5091509150612f1e82828661303c565b979650505050505050565b801580612fb25750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015612f7857600080fd5b505afa158015612f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fb09190613446565b155b61301d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161073f565b610cf88363095ea7b360e01b8484604051602401611bac92919061342d565b6060831561304b575081611983565b82511561305b5782518084602001fd5b8160405162461bcd60e51b815260040161073f9190613560565b6001600160a01b038116811461174657600080fd5b6000806040838503121561309d57600080fd5b82356130a881613075565b915060208301356130b881613075565b809150509250929050565b6000602082840312156130d557600080fd5b813561198381613075565b600080604083850312156130f357600080fd5b50508035926020909101359150565b6000806040838503121561311557600080fd5b823561312081613075565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561316f5783516001600160a01b03168352928401929184019160010161314a565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156131ba576131ba61317b565b604052919050565b600067ffffffffffffffff8211156131dc576131dc61317b565b5060051b60200190565b801515811461174657600080fd5b600082601f83011261320557600080fd5b8135602061321a613215836131c2565b613191565b82815260059290921b8401810191818101908684111561323957600080fd5b8286015b8481101561325d578035613250816131e6565b835291830191830161323d565b509695505050505050565b6000806040838503121561327b57600080fd5b823567ffffffffffffffff8082111561329357600080fd5b818501915085601f8301126132a757600080fd5b813560206132b7613215836131c2565b82815260059290921b840181019181810190898411156132d657600080fd5b948201945b838610156132fd5785356132ee81613075565b825294820194908201906132db565b9650508601359250508082111561331357600080fd5b50613320858286016131f4565b9150509250929050565b604080825283519082018190526000906020906060840190828701845b8281101561336c5781516001600160a01b031684529284019290840190600101613347565b5050508381038285015284518082528583019183019060005b818110156133a157835183529284019291840191600101613385565b5090979650505050505050565b6000602082840312156133c057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156133f1576133f16133c7565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561345857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008219821115613488576134886133c7565b500190565b60008160001904831182151516156134a7576134a76133c7565b500290565b6000828210156134be576134be6133c7565b500390565b6000826134e057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561350d57600080fd5b8151611983816131e6565b60005b8381101561353357818101518382015260200161351b565b83811115611be35750506000910152565b60008251613556818460208701613518565b9190910192915050565b602081526000825180602084015261357f816040850160208701613518565b601f01601f1916919091016040019291505056fea264697066735822122052c10348ead2257a7856ae9b79081c152cd53342e92a0d526c6d51ffc3cf81ef64736f6c63430008090033";

type MarginLongConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginLongConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginLong__factory extends ContractFactory {
  constructor(...args: MarginLongConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarginLong";
  }

  deploy(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarginLong> {
    return super.deploy(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    ) as Promise<MarginLong>;
  }
  getDeployTransaction(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    );
  }
  attach(address: string): MarginLong {
    return super.attach(address) as MarginLong;
  }
  connect(signer: Signer): MarginLong__factory {
    return super.connect(signer) as MarginLong__factory;
  }
  static readonly contractName: "MarginLong";
  public readonly contractName: "MarginLong";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginLongInterface {
    return new utils.Interface(_abi) as MarginLongInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarginLong {
    return new Contract(address, _abi, signerOrProvider) as MarginLong;
  }
}
