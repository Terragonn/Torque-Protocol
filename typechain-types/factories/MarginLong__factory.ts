/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarginLong, MarginLongInterface } from "../MarginLong";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RepayAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resetter",
        type: "address",
      },
    ],
    name: "Reset",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowingAccounts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedBorrowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedCollateral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidateAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "marginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "maxLeverageReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCollateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract LPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "removeCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "repayAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repayAccountAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resetAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resettable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedBorrowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    name: "setLiquidationFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
    ],
    name: "setMaxLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
    ],
    name: "setMinCollateralPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minMarginLevelNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelDenominator_",
        type: "uint256",
      },
    ],
    name: "setMinMarginLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "sufficientCollateralPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "totalBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
    ],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620036d6380380620036d6833981016040819052620000349162000106565b8181858589898d8d62000047336200009d565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055600891909155600955600a91909155600b55600e91909155600f55506200017c9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010357600080fd5b50565b600080600080600080600080610100898b0312156200012457600080fd5b88516200013181620000ed565b60208a01519098506200014481620000ed565b60408a015160608b015160808c015160a08d015160c08e015160e0909e01519c9f949e50929c919b909a509198509650945092505050565b61354a806200018c6000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80637e059b221161015c578063b4929721116100ce578063d8459b4511610087578063d8459b45146105fd578063e2e1ca2b14610610578063e880f13914610639578063f2fde38b14610665578063f5af8d1114610678578063ffec70af1461068b57600080fd5b8063b492972114610596578063b64c74041461059e578063ca3134f6146105b1578063cc218ece146105c4578063d3127e63146105d7578063d3eec404146105ea57600080fd5b80638da5cb5b116101205780638da5cb5b14610530578063916b6c5b14610541578063a4c2c9c514610554578063ac436bdf14610567578063ae3302c21461057a578063b0a02abe1461058357600080fd5b80637e059b22146104b75780637e773d01146104e0578063813c2302146104e9578063876467f8146104fc5780638ac5d4a31461050f57600080fd5b80634eb72012116101f55780636fc2d3c6116101b95780636fc2d3c614610428578063706f1ada1461043b578063715018a61461044e5780637adbf973146104565780637c9ff9eb146104695780637dc0d1d0146104a457600080fd5b80634eb720121461039b57806350711be9146103a657806366dad8f4146103d45780636847e50b146104005780636d75b9ee1461041557600080fd5b8063172fc1f211610247578063172fc1f21461032057806325b69c0c146103335780632becebd21461034f5780632dbaacdc146103625780634437152a146103755780634b8a35291461038857600080fd5b806303f5aaad1461028457806308b1cb23146102ac5780630f9b628e146102cd57806314ace5bb146102e257806316f0115b146102f5575b600080fd5b61029761029236600461300b565b61069e565b60405190151581526020015b60405180910390f35b6102bf6102ba366004613044565b6106b5565b6040519081526020016102a3565b6102e06102db366004613061565b610715565b005b6102e06102f0366004613061565b610753565b600154610308906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b61029761032e366004613044565b610788565b6008546009545b604080519283526020830191909152016102a3565b61029761035d366004613044565b61079e565b610297610370366004613044565b6107d8565b6102e0610383366004613044565b61081c565b6102e0610396366004613083565b610868565b600e54600f5461033a565b6102976103b4366004613044565b6001600160a01b0316600090815260076020526040902060080154151590565b6102976103e2366004613044565b6001600160a01b031660009081526003602052604090205460ff1690565b610408610b33565b6040516102a391906130af565b6102e0610423366004613083565b610b44565b6102e06104363660046131e9565b610c4e565b6102bf61044936600461300b565b610cfd565b6102e0610d2d565b6102e0610464366004613044565b610d63565b6102bf61047736600461300b565b6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b600254610308906001600160a01b031681565b6102bf6104c5366004613044565b6001600160a01b031660009081526006602052604090205490565b6102bf600a5481565b61033a6104f7366004613044565b610daf565b6102e061050a366004613083565b610df6565b61052261051d366004613044565b610f84565b6040516102a39291906132ab565b6000546001600160a01b0316610308565b6102e061054f366004613044565b611115565b6102e06105623660046131e9565b61125b565b6102bf610575366004613044565b611305565b6102bf600b5481565b6102bf61059136600461300b565b61135a565b6102e061138a565b6102bf6105ac366004613044565b611445565b6105226105bf366004613044565b61149a565b6102bf6105d236600461300b565b6115af565b6102e06105e536600461332f565b6115df565b6102e06105f836600461332f565b61160e565b6102bf61060b366004613044565b61163d565b6102bf61061e366004613044565b6001600160a01b031660009081526005602052604090205490565b610297610647366004613044565b6001600160a01b031660009081526004602052604090205460ff1690565b6102e0610673366004613044565b611691565b6102bf61068636600461300b565b61172c565b610297610699366004613044565b611831565b6000806106ab848461135a565b1190505b92915050565b6001600160a01b038116600090815260076020526040812081805b600183015481101561070d576106f96106f26106ec85846118a7565b876118da565b839061196d565b9150806107058161335e565b9150506106d0565b509392505050565b6000546001600160a01b031633146107485760405162461bcd60e51b815260040161073f90613379565b60405180910390fd5b600891909155600955565b6000546001600160a01b0316331461077d5760405162461bcd60e51b815260040161073f90613379565b600e91909155600f55565b6000600a54610796836106b5565b101592915050565b6000806107aa836106b5565b905060006107b784611445565b9050806107cf600b548461197990919063ffffffff16565b10949350505050565b6001600160a01b038116600090815260076020526040812060080154151580156106af57506108068261079e565b806106af575061081582610788565b1592915050565b6000546001600160a01b031633146108465760405162461bcd60e51b815260040161073f90613379565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b8161088b816001600160a01b031660009081526004602052604090205460ff1690565b6108fd5760405162461bcd60e51b815260206004820152603960248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420626f60448201527f72726f77656420746f6b656e73206d6179206265207573656400000000000000606482015260840161073f565b610907833361069e565b61093c573360009081526007602081815260408084206001600160a01b03881685529092019052902043905561093c33611985565b600154604051635569f64b60e11b81526001600160a01b039091169063aad3ec969061096e90869086906004016133ae565b600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b505050506109bf836109b9846109b3876105913390565b9061196d565b33611990565b60025460405163b1d5e1b960e01b81526000916001600160a01b03169063b1d5e1b9906109f290879087906004016133ae565b60206040518083038186803b158015610a0a57600080fd5b505afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4291906133c7565b9050610a5c84610a56836109b38333610cfd565b33611ac5565b610a65336107d8565b158015610a785750610a7633611831565b155b610aea5760405162461bcd60e51b815260206004820152603f60248201527f4d617267696e4c6f6e67426f72726f773a20426f72726f77696e67206465736960448201527f72656420616d6f756e742070757473206163636f756e74206174207269736b00606482015260840161073f565b336001600160a01b03167f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b528585604051610b259291906133ae565b60405180910390a250505050565b6060610b3f600c611af5565b905090565b81610b67816001600160a01b031660009081526003602052604090205460ff1690565b610bd95760405162461bcd60e51b815260206004820152603b60248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420636f60448201527f6c6c61746572616c20746f6b656e73206d617920626520757365640000000000606482015260840161073f565b610bee6001600160a01b038416333085611b5b565b610c0683610c00846109b383336115af565b33611bcc565b336001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f8484604051610c419291906133ae565b60405180910390a2505050565b6000546001600160a01b03163314610c785760405162461bcd60e51b815260040161073f90613379565b60005b8251811015610cf857818181518110610c9657610c966133e0565b602002602001015160036000858481518110610cb457610cb46133e0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610cf08161335e565b915050610c7b565b505050565b6001600160a01b038082166000908152600760209081526040808320938616835260069093019052205492915050565b6000546001600160a01b03163314610d575760405162461bcd60e51b815260040161073f90613379565b610d616000611cc7565b565b6000546001600160a01b03163314610d8d5760405162461bcd60e51b815260040161073f90613379565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000610dbd84611445565b90506000610dca85611305565b9050610de1610dd8866106b5565b6109b38761163d565b610deb838361196d565b935093505050915091565b610e0082336115af565b811115610e755760405162461bcd60e51b815260206004820152603e60248201527f4d617267696e436f6c6c61746572616c3a2043616e6e6f742072656d6f76652060448201527f6d6f7265207468616e20617661696c61626c6520636f6c6c61746572616c0000606482015260840161073f565b610e8d82610c0083610e8783336115af565b90611d17565b610e96336107d8565b158015610ea95750610ea733611831565b155b610f295760405162461bcd60e51b815260206004820152604560248201527f4d617267696e436f6c6c61746572616c3a205769746864726177696e6720646560448201527f736972656420636f6c6c61746572616c2070757473206163636f756e74206174606482015264207269736b60d81b608482015260a40161073f565b610f3d6001600160a01b0383163383611d23565b336001600160a01b03167f367be65505e5aff90e7e646744b5f75280ec6d79a0e78690f6020b875a03bc128383604051610f789291906133ae565b60405180910390a25050565b606080610f9083611831565b610ffb5760405162461bcd60e51b815260206004820152603660248201527f4d617267696e4c6f6e674c69717569646174653a2054686973206163636f756e6044820152751d0818d85b9b9bdd081899481b1a5c5d5a59185d195960521b606482015260840161073f565b6000611006846106b5565b9050600080611018600e54600f549091565b909250905060006110338261102d8686611979565b90611d42565b9050600080611042838a611d4e565b9150915060005b82518110156110b5576110a3335b838381518110611069576110696133e0565b6020026020010151858481518110611083576110836133e0565b60200260200101516001600160a01b0316611d239092919063ffffffff16565b806110ad8161335e565b915050611049565b506110bf89611dc2565b6001600160a01b0389167facd74f5a0eb0d086de0eebe2d1e70d5742838c88cb2cf492fc201d39e056f7e0335b6040516001600160a01b03909116815260200160405180910390a2909890975095505050505050565b61111f813361069e565b611193576040805162461bcd60e51b81526020600482015260248101919091527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e606482015260840161073f565b61119d8133611dd4565b6111a6336107d8565b156112195760405162461bcd60e51b815260206004820152603760248201527f4d617267696e4c6f6e6752657061793a205265706179696e6720706f7369746960448201527f6f6e2070757473206163636f756e74206174207269736b000000000000000000606482015260840161073f565b604080516001600160a01b0383168152905133917f7d361c02aa3e26ac9383eca42a9b4f42433e252882bfb806e8b76869b815250f919081900360200190a250565b6000546001600160a01b031633146112855760405162461bcd60e51b815260040161073f90613379565b60005b8251811015610cf8578181815181106112a3576112a36133e0565b6020026020010151600460008584815181106112c1576112c16133e0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806112fd8161335e565b915050611288565b60008061131183611e29565b90506000805b825181101561070d576113466106f2848381518110611338576113386133e0565b60200260200101518761172c565b9150806113528161335e565b915050611317565b6001600160a01b038082166000908152600760209081526040808320938616835260059093019052205492915050565b611393336103b4565b61140f5760405162461bcd60e51b815260206004820152604160248201527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e6064820152607360f81b608482015260a40161073f565b61141833611e50565b60405133907f2a5e2bc4fa361e17232a0638ac48c9dd4aed21e3241a5bac60bb30f4d505344690600090a2565b60008061145183611e29565b90506000805b825181101561070d576114866106f2848381518110611478576114786133e0565b602002602001015187610cfd565b9150806114928161335e565b915050611457565b6060806114a6836107d8565b6115085760405162461bcd60e51b815260206004820152602d60248201527f4d617267696e4c6f6e6752657061793a2054686973206163636f756e7420636160448201526c1b9b9bdd081899481c995cd95d609a1b606482015260840161073f565b61151183611e50565b600061151c846106b5565b905060008061152e600e54600f549091565b909250905060006115438261102d8686611979565b90506000806115528333611d4e565b9150915060005b825181101561157d5761156b33611057565b806115758161335e565b915050611559565b506001600160a01b0389167fa5df7b378f5dbf7c276ac35d5314c533b2fa1d772a893f471c41481862ec93db336110ec565b6001600160a01b038082166000908152600760209081526040808320938616835260029093019052205492915050565b6000546001600160a01b031633146116095760405162461bcd60e51b815260040161073f90613379565b600b55565b6000546001600160a01b031633146116385760405162461bcd60e51b815260040161073f90613379565b600a55565b6001600160a01b038116600090815260076020526040812081805b600483015481101561070d5761167d6106f261167760038601846118a7565b87611e6b565b9150806116898161335e565b915050611658565b6000546001600160a01b031633146116bb5760405162461bcd60e51b815260040161073f90613379565b6001600160a01b0381166117205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161073f565b61172981611cc7565b50565b6000806117398484611e6b565b905060006117478585610cfd565b905060008183111561175a57508161175d565b50805b6001546001600160a01b031663d0b9622c87836117a2828a6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152602483019190915260448201526064015b60206040518083038186803b1580156117ef57600080fd5b505afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182791906133c7565b9695505050505050565b6001600160a01b03811660009081526007602052604081206008015461185957506000919050565b6000806118696008546009549091565b9150915060008061187986610daf565b9092509050600061188a8583611979565b905060006118988486611979565b90911015979650505050505050565b60008260010182815481106118be576118be6133e0565b6000918252602090912001546001600160a01b03169392505050565b6002546000906001600160a01b031663b1d5e1b9846118f981866115af565b6040518363ffffffff1660e01b81526004016119169291906133ae565b60206040518083038186803b15801561192e57600080fd5b505afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906133c7565b9392505050565b600061196682846133f6565b6000611966828461340e565b611729600c82611e8a565b6001600160a01b0380821660009081526007602090815260408083209387168352600584019091529020541580156119c757508215155b156119de576119d96003820185611f50565b611a17565b6001600160a01b038416600090815260058201602052604090205415801590611a05575082155b15611a1757611a176003820185611fba565b6001600160a01b0384166000908152600580830160209081526040808420549290915290912054611a70918691611a549187916109b39190610e87565b6001600160a01b03909116600090815260056020526040902055565b6001600160a01b03841660009081526005820160205260409020546008820154611a9f9185916109b391611d17565b60088201556001600160a01b039093166000908152600590930160205250604090912055565b6001600160a01b039081166000908152600760209081526040808320959093168252600690940190935290912055565b606081600101805480602002602001604051908101604052809291908181526020018280548015611b4f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b31575b50505050509050919050565b6040516001600160a01b0380851660248301528316604482015260648101829052611bc69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612106565b50505050565b6001600160a01b038082166000908152600760209081526040808320938716835260028401909152902054158015611c0357508215155b15611c1757611c128185611f50565b611c4d565b6001600160a01b038416600090815260028201602052604090205415801590611c3e575082155b15611c4d57611c4d8185611fba565b6001600160a01b0384166000908152600282016020908152604080832054600690925290912054611ca6918691611c8a9187916109b39190610e87565b6001600160a01b03909116600090815260066020526040902055565b6001600160a01b039093166000908152600290930160205250604090912055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611966828461342d565b610cf88363a9059cbb60e01b8484604051602401611b8f9291906133ae565b60006119668284613444565b6060806000611d5c846121d8565b90506000815167ffffffffffffffff811115611d7a57611d7a6130fc565b604051908082528060200260200182016040528015611da3578160200160208202803683370190505b5090506000611db587878585856121fc565b5091969095509350505050565b611dcb816123e6565b61172981612508565b611dde8282612587565b15611df257611ded82826125c8565b611dfc565b611dfc82826126d6565b6001600160a01b038116600090815260076020526040902060080154611e2557611e25816127dc565b5050565b6001600160a01b03811660009081526007602052604090206060906106af90600301611af5565b611e59816127e7565b611e628161285d565b611729816127dc565b6002546000906001600160a01b031663b1d5e1b9846118f9818661135a565b611e948282612a0c565b15611ef85760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320616c7265616479206578697360448201526d3a399034b7103a34329039b2ba1760911b606482015260840161073f565b6001828101805480830182556000828152602090200180546001600160a01b0319166001600160a01b03851617905554611f32919061342d565b6001600160a01b039091166000908152602092909252604090912055565b611f5a8282612a0c565b15611ef85760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b611fc48282612a0c565b6120235760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b600182810180546000926120369161342d565b81548110612046576120466133e0565b60009182526020808320909101546001600160a01b03858116845291869052604080842054929091168084529220819055600185018054929350909183919083908110612095576120956133e0565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559185168152908590526040812055600184018054806120de576120de613466565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b600061215b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a6d9092919063ffffffff16565b805190915015610cf85780806020019051810190612179919061347c565b610cf85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161073f565b6001600160a01b03811660009081526007602052604090206060906106af90611af5565b60005b60008611801561220f5750835182105b156123dd57600061223985848151811061222b5761222b6133e0565b6020026020010151876115af565b90506000612260868581518110612252576122526133e0565b6020026020010151886118da565b9050878110156122cc578185858151811061227d5761227d6133e0565b6020026020010181815250506122ae86858151811061229e5761229e6133e0565b6020026020010151600089611bcc565b6122b88882611d17565b97506122c584600161196d565b93506123d6565b60025486516000916001600160a01b0316906395f881c9908990889081106122f6576122f66133e0565b60200260200101518b6040518363ffffffff1660e01b815260040161231c9291906133ae565b60206040518083038186803b15801561233457600080fd5b505afa158015612348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236c91906133c7565b9050828111156123795750815b8086868151811061238c5761238c6133e0565b6020026020010181815250506123ce8786815181106123ad576123ad6133e0565b60200260200101516123c88386611d1790919063ffffffff16565b8a611bcc565b5050506123dd565b50506121ff565b50949350505050565b60006123f182611e29565b905060005b81518110156124fe5760015482516001600160a01b039091169063bffe84c290849084908110612428576124286133e0565b6020026020010151612453858581518110612445576124456133e0565b60200260200101518761135a565b6040518363ffffffff1660e01b81526004016124709291906133ae565b600060405180830381600087803b15801561248a57600080fd5b505af115801561249e573d6000803e3d6000fd5b505050506124c78282815181106124b7576124b76133e0565b6020026020010151600085611ac5565b6124ec8282815181106124dc576124dc6133e0565b6020026020010151600085611990565b806124f68161335e565b9150506123f6565b50611e25826127dc565b6000612513826121d8565b9050600061252083612a84565b905061252c8282612b39565b60005b8251811015611bc65761257583828151811061254d5761254d6133e0565b6020026020010151838381518110612567576125676133e0565b602002602001015186611bcc565b8061257f8161335e565b91505061252f565b6000806125948484611e6b565b905060006125a28585610cfd565b905060006125b0868661172c565b90506125bc828261196d565b90921195945050505050565b60006125d48383612c73565b6001549091506001600160a01b031663bffe84c2846125f3818661135a565b6040518363ffffffff1660e01b81526004016126109291906133ae565b600060405180830381600087803b15801561262a57600080fd5b505af115801561263e573d6000803e3d6000fd5b505060015460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a3915061267490869085906004016133ae565b600060405180830381600087803b15801561268e57600080fd5b505af11580156126a2573d6000803e3d6000fd5b505050506126b283600084611ac5565b6126be83600084611990565b610cf8836126d0836109b387876115af565b84611bcc565b60006126e1826121d8565b90506000815167ffffffffffffffff8111156126ff576126ff6130fc565b604051908082528060200260200182016040528015612728578160200160208202803683370190505b50905060006127378585612cdc565b90506127478185858560006121fc565b506127528383612b39565b6001546001600160a01b031663bffe84c28661276e818861135a565b6040518363ffffffff1660e01b815260040161278b9291906133ae565b600060405180830381600087803b1580156127a557600080fd5b505af11580156127b9573d6000803e3d6000fd5b505050506127c985600086611990565b6127d585600086611ac5565b5050505050565b611729600c82612d15565b60006127f282611e29565b905060005b8151811015610cf857612823828281518110612815576128156133e0565b602002602001015184612587565b1561284b5761284b82828151811061283d5761283d6133e0565b6020026020010151846125c8565b806128558161335e565b9150506127f7565b600061286882611e29565b90506000612875836121d8565b90506000815167ffffffffffffffff811115612893576128936130fc565b6040519080825280602002602001820160405280156128bc578160200160208202803683370190505b5090506000805b8451811015612a015760006128f18683815181106128e3576128e36133e0565b602002602001015188612cdc565b905061290081888787876121fc565b60015487519194506001600160a01b03169063bffe84c29088908590811061292a5761292a6133e0565b6020026020010151612955898681518110612947576129476133e0565b60200260200101518b61135a565b6040518363ffffffff1660e01b81526004016129729291906133ae565b600060405180830381600087803b15801561298c57600080fd5b505af11580156129a0573d6000803e3d6000fd5b505050506129c98683815181106129b9576129b96133e0565b6020026020010151600089611990565b6129ee8683815181106129de576129de6133e0565b6020026020010151600089611ac5565b50806129f98161335e565b9150506128c3565b506127d58383612b39565b6001820154600090612a20575060006106af565b6001600160a01b0382166000818152602085905260409020546001850180549091908110612a5057612a506133e0565b6000918252602090912001546001600160a01b0316149392505050565b6060612a7c8484600085612d82565b949350505050565b60606000612a91836121d8565b90506000815167ffffffffffffffff811115612aaf57612aaf6130fc565b604051908082528060200260200182016040528015612ad8578160200160208202803683370190505b50905060005b825181101561070d57612b0a838281518110612afc57612afc6133e0565b6020026020010151866115af565b828281518110612b1c57612b1c6133e0565b602090810291909101015280612b318161335e565b915050612ade565b60005b8251811015610cf8576000828281518110612b5957612b596133e0565b60200260200101511115612c61576001548251612bc6916001600160a01b031690849084908110612b8c57612b8c6133e0565b6020026020010151858481518110612ba657612ba66133e0565b60200260200101516001600160a01b0316612eaa9092919063ffffffff16565b60015483516001600160a01b03909116906347e7ef2490859084908110612bef57612bef6133e0565b6020026020010151848481518110612c0957612c096133e0565b60200260200101516040518363ffffffff1660e01b8152600401612c2e9291906133ae565b600060405180830381600087803b158015612c4857600080fd5b505af1158015612c5c573d6000803e3d6000fd5b505050505b80612c6b8161335e565b915050612b3c565b600080612c808484611e6b565b90506000612c8e8585610cfd565b90506000612c9c868661172c565b6002549091506001600160a01b031663468cde7287612cbf84610e878888611d17565b6040518363ffffffff1660e01b81526004016117d79291906133ae565b600080612ce98484611e6b565b90506000612cf78585610cfd565b90506000612d05868661172c565b905061182783610e87848461196d565b612d1f8282612a0c565b6120235760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320646f6573206e6f742065786960448201526d39ba1034b7103a34329039b2ba1760911b606482015260840161073f565b606082471015612de35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161073f565b843b612e315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161073f565b600080866001600160a01b03168587604051612e4d91906134c5565b60006040518083038185875af1925050503d8060008114612e8a576040519150601f19603f3d011682016040523d82523d6000602084013e612e8f565b606091505b5091509150612e9f828286612fbd565b979650505050505050565b801580612f335750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015612ef957600080fd5b505afa158015612f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f3191906133c7565b155b612f9e5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161073f565b610cf88363095ea7b360e01b8484604051602401611b8f9291906133ae565b60608315612fcc575081611966565b825115612fdc5782518084602001fd5b8160405162461bcd60e51b815260040161073f91906134e1565b6001600160a01b038116811461172957600080fd5b6000806040838503121561301e57600080fd5b823561302981612ff6565b9150602083013561303981612ff6565b809150509250929050565b60006020828403121561305657600080fd5b813561196681612ff6565b6000806040838503121561307457600080fd5b50508035926020909101359150565b6000806040838503121561309657600080fd5b82356130a181612ff6565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156130f05783516001600160a01b0316835292840192918401916001016130cb565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561313b5761313b6130fc565b604052919050565b600067ffffffffffffffff82111561315d5761315d6130fc565b5060051b60200190565b801515811461172957600080fd5b600082601f83011261318657600080fd5b8135602061319b61319683613143565b613112565b82815260059290921b840181019181810190868411156131ba57600080fd5b8286015b848110156131de5780356131d181613167565b83529183019183016131be565b509695505050505050565b600080604083850312156131fc57600080fd5b823567ffffffffffffffff8082111561321457600080fd5b818501915085601f83011261322857600080fd5b8135602061323861319683613143565b82815260059290921b8401810191818101908984111561325757600080fd5b948201945b8386101561327e57853561326f81612ff6565b8252948201949082019061325c565b9650508601359250508082111561329457600080fd5b506132a185828601613175565b9150509250929050565b604080825283519082018190526000906020906060840190828701845b828110156132ed5781516001600160a01b0316845292840192908401906001016132c8565b5050508381038285015284518082528583019183019060005b8181101561332257835183529284019291840191600101613306565b5090979650505050505050565b60006020828403121561334157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561337257613372613348565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03929092168252602082015260400190565b6000602082840312156133d957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000821982111561340957613409613348565b500190565b600081600019048311821515161561342857613428613348565b500290565b60008282101561343f5761343f613348565b500390565b60008261346157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561348e57600080fd5b815161196681613167565b60005b838110156134b457818101518382015260200161349c565b83811115611bc65750506000910152565b600082516134d7818460208701613499565b9190910192915050565b6020815260008251806020840152613500816040850160208701613499565b601f01601f1916919091016040019291505056fea2646970667358221220cacfc68e244cfe2a66035f4a469ba255eb4e3b471f628ceda8cee7c971d85d7e64736f6c63430008090033";

type MarginLongConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginLongConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginLong__factory extends ContractFactory {
  constructor(...args: MarginLongConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarginLong";
  }

  deploy(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarginLong> {
    return super.deploy(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    ) as Promise<MarginLong>;
  }
  getDeployTransaction(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    );
  }
  attach(address: string): MarginLong {
    return super.attach(address) as MarginLong;
  }
  connect(signer: Signer): MarginLong__factory {
    return super.connect(signer) as MarginLong__factory;
  }
  static readonly contractName: "MarginLong";
  public readonly contractName: "MarginLong";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginLongInterface {
    return new utils.Interface(_abi) as MarginLongInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarginLong {
    return new Contract(address, _abi, signerOrProvider) as MarginLong;
  }
}
