/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarginLong, MarginLongInterface } from "../MarginLong";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelPercentDenominator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AddCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "Liquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveCollateral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "borrowed",
        type: "address",
      },
    ],
    name: "Repay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RepayAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resetter",
        type: "address",
      },
    ],
    name: "Reset",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "borrowedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "collateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowingAccounts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "initialBorrowPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "interest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedBorrowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "isApprovedCollateral",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "isBorrowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "liquidateAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "marginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "maxLeverageReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCollateralPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract LPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "removeCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "repayAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "repayAccountAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resetAccount",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "resettable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedBorrowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token_",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "approved_",
        type: "bool[]",
      },
    ],
    name: "setApprovedCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidationFeePercentNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationFeePercentDenominator_",
        type: "uint256",
      },
    ],
    name: "setLiquidationFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxLeverage_",
        type: "uint256",
      },
    ],
    name: "setMaxLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minCollateralPrice_",
        type: "uint256",
      },
    ],
    name: "setMinCollateralPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minMarginLevelNumerator_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMarginLevelDenominator_",
        type: "uint256",
      },
    ],
    name: "setMinMarginLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "sufficientCollateralPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "borrowed_",
        type: "address",
      },
    ],
    name: "totalBorrowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "collateral_",
        type: "address",
      },
    ],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200376138038062003761833981016040819052620000349162000106565b8181858589898d8d62000047336200009d565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055600891909155600955600a91909155600b55600e91909155600f55506200017c9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010357600080fd5b50565b600080600080600080600080610100898b0312156200012457600080fd5b88516200013181620000ed565b60208a01519098506200014481620000ed565b60408a015160608b015160808c015160a08d015160c08e015160e0909e01519c9f949e50929c919b909a509198509650945092505050565b6135d5806200018c6000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80637e059b221161015c578063b4929721116100ce578063d8459b4511610087578063d8459b45146105fd578063e2e1ca2b14610610578063e880f13914610639578063f2fde38b14610665578063f5af8d1114610678578063ffec70af1461068b57600080fd5b8063b492972114610596578063b64c74041461059e578063ca3134f6146105b1578063cc218ece146105c4578063d3127e63146105d7578063d3eec404146105ea57600080fd5b80638da5cb5b116101205780638da5cb5b14610530578063916b6c5b14610541578063a4c2c9c514610554578063ac436bdf14610567578063ae3302c21461057a578063b0a02abe1461058357600080fd5b80637e059b22146104b75780637e773d01146104e0578063813c2302146104e9578063876467f8146104fc5780638ac5d4a31461050f57600080fd5b80634eb72012116101f55780636fc2d3c6116101b95780636fc2d3c614610428578063706f1ada1461043b578063715018a61461044e5780637adbf973146104565780637c9ff9eb146104695780637dc0d1d0146104a457600080fd5b80634eb720121461039b57806350711be9146103a657806366dad8f4146103d45780636847e50b146104005780636d75b9ee1461041557600080fd5b8063172fc1f211610247578063172fc1f21461032057806325b69c0c146103335780632becebd21461034f5780632dbaacdc146103625780634437152a146103755780634b8a35291461038857600080fd5b806303f5aaad1461028457806308b1cb23146102ac5780630f9b628e146102cd57806314ace5bb146102e257806316f0115b146102f5575b600080fd5b610297610292366004613096565b61069e565b60405190151581526020015b60405180910390f35b6102bf6102ba3660046130cf565b6106b5565b6040519081526020016102a3565b6102e06102db3660046130ec565b610715565b005b6102e06102f03660046130ec565b610753565b600154610308906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b61029761032e3660046130cf565b610788565b6008546009545b604080519283526020830191909152016102a3565b61029761035d3660046130cf565b61079e565b6102976103703660046130cf565b6107d8565b6102e06103833660046130cf565b61081c565b6102e061039636600461310e565b610868565b600e54600f5461033a565b6102976103b43660046130cf565b6001600160a01b0316600090815260076020526040902060080154151590565b6102976103e23660046130cf565b6001600160a01b031660009081526003602052604090205460ff1690565b610408610b33565b6040516102a3919061313a565b6102e061042336600461310e565b610b44565b6102e0610436366004613274565b610c4e565b6102bf610449366004613096565b610cfd565b6102e0610d2d565b6102e06104643660046130cf565b610d63565b6102bf610477366004613096565b6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b600254610308906001600160a01b031681565b6102bf6104c53660046130cf565b6001600160a01b031660009081526006602052604090205490565b6102bf600a5481565b61033a6104f73660046130cf565b610daf565b6102e061050a36600461310e565b610df6565b61052261051d3660046130cf565b610fad565b6040516102a3929190613336565b6000546001600160a01b0316610308565b6102e061054f3660046130cf565b61113e565b6102e0610562366004613274565b611284565b6102bf6105753660046130cf565b61132e565b6102bf600b5481565b6102bf610591366004613096565b611383565b6102e06113b3565b6102bf6105ac3660046130cf565b61146e565b6105226105bf3660046130cf565b6114c3565b6102bf6105d2366004613096565b6115d8565b6102e06105e53660046133ba565b611608565b6102e06105f83660046133ba565b611637565b6102bf61060b3660046130cf565b611666565b6102bf61061e3660046130cf565b6001600160a01b031660009081526005602052604090205490565b6102976106473660046130cf565b6001600160a01b031660009081526004602052604090205460ff1690565b6102e06106733660046130cf565b6116ba565b6102bf610686366004613096565b611755565b6102976106993660046130cf565b61185a565b6000806106ab8484611383565b1190505b92915050565b6001600160a01b038116600090815260076020526040812081805b600183015481101561070d576106f96106f26106ec85846118d0565b87611903565b8390611996565b915080610705816133e9565b9150506106d0565b509392505050565b6000546001600160a01b031633146107485760405162461bcd60e51b815260040161073f90613404565b60405180910390fd5b600891909155600955565b6000546001600160a01b0316331461077d5760405162461bcd60e51b815260040161073f90613404565b600e91909155600f55565b6000600a54610796836106b5565b101592915050565b6000806107aa836106b5565b905060006107b78461146e565b9050806107cf600b54846119a290919063ffffffff16565b10949350505050565b6001600160a01b038116600090815260076020526040812060080154151580156106af57506108068261079e565b806106af575061081582610788565b1592915050565b6000546001600160a01b031633146108465760405162461bcd60e51b815260040161073f90613404565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b8161088b816001600160a01b031660009081526004602052604090205460ff1690565b6108fd5760405162461bcd60e51b815260206004820152603960248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420626f60448201527f72726f77656420746f6b656e73206d6179206265207573656400000000000000606482015260840161073f565b610907833361069e565b61093c573360009081526007602081815260408084206001600160a01b03881685529092019052902043905561093c336119ae565b600154604051635569f64b60e11b81526001600160a01b039091169063aad3ec969061096e9086908690600401613439565b600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b505050506109bf836109b9846109b3876105913390565b90611996565b336119b9565b60025460405163b1d5e1b960e01b81526000916001600160a01b03169063b1d5e1b9906109f29087908790600401613439565b60206040518083038186803b158015610a0a57600080fd5b505afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190613452565b9050610a5c84610a56836109b38333610cfd565b33611aee565b610a65336107d8565b158015610a785750610a763361185a565b155b610aea5760405162461bcd60e51b815260206004820152603f60248201527f4d617267696e4c6f6e67426f72726f773a20426f72726f77696e67206465736960448201527f72656420616d6f756e742070757473206163636f756e74206174207269736b00606482015260840161073f565b336001600160a01b03167f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b528585604051610b25929190613439565b60405180910390a250505050565b6060610b3f600c611b1e565b905090565b81610b67816001600160a01b031660009081526003602052604090205460ff1690565b610bd95760405162461bcd60e51b815260206004820152603b60248201527f4d617267696e417070726f7665643a204f6e6c7920617070726f76656420636f60448201527f6c6c61746572616c20746f6b656e73206d617920626520757365640000000000606482015260840161073f565b610bee6001600160a01b038416333085611b84565b610c0683610c00846109b383336115d8565b33611bf5565b336001600160a01b03167fa32435755c235de2976ed44a75a2f85cb01faf0c894f639fe0c32bb9455fea8f8484604051610c41929190613439565b60405180910390a2505050565b6000546001600160a01b03163314610c785760405162461bcd60e51b815260040161073f90613404565b60005b8251811015610cf857818181518110610c9657610c9661346b565b602002602001015160036000858481518110610cb457610cb461346b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610cf0816133e9565b915050610c7b565b505050565b6001600160a01b038082166000908152600760209081526040808320938616835260069093019052205492915050565b6000546001600160a01b03163314610d575760405162461bcd60e51b815260040161073f90613404565b610d616000611cf0565b565b6000546001600160a01b03163314610d8d5760405162461bcd60e51b815260040161073f90613404565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000610dbd8461146e565b90506000610dca8561132e565b9050610de1610dd8866106b5565b6109b387611666565b610deb8383611996565b935093505050915091565b610e0082336115d8565b811115610e755760405162461bcd60e51b815260206004820152603e60248201527f4d617267696e436f6c6c61746572616c3a2043616e6e6f742072656d6f76652060448201527f6d6f7265207468616e20617661696c61626c6520636f6c6c61746572616c0000606482015260840161073f565b610e8d82610c0083610e8783336115d8565b90611d40565b610e9e610e99336103b4565b611d4c565b610eaa610e99336107d8565b610eb6610e993361185a565b610ebf336107d8565b158015610ed25750610ed03361185a565b155b610f525760405162461bcd60e51b815260206004820152604560248201527f4d617267696e436f6c6c61746572616c3a205769746864726177696e6720646560448201527f736972656420636f6c6c61746572616c2070757473206163636f756e74206174606482015264207269736b60d81b608482015260a40161073f565b610f666001600160a01b0383163383611d8d565b336001600160a01b03167f367be65505e5aff90e7e646744b5f75280ec6d79a0e78690f6020b875a03bc128383604051610fa1929190613439565b60405180910390a25050565b606080610fb98361185a565b6110245760405162461bcd60e51b815260206004820152603660248201527f4d617267696e4c6f6e674c69717569646174653a2054686973206163636f756e6044820152751d0818d85b9b9bdd081899481b1a5c5d5a59185d195960521b606482015260840161073f565b600061102f846106b5565b9050600080611041600e54600f549091565b9092509050600061105c8261105686866119a2565b90611dac565b905060008061106b838a611db8565b9150915060005b82518110156110de576110cc335b8383815181106110925761109261346b565b60200260200101518584815181106110ac576110ac61346b565b60200260200101516001600160a01b0316611d8d9092919063ffffffff16565b806110d6816133e9565b915050611072565b506110e889611e2c565b6001600160a01b0389167facd74f5a0eb0d086de0eebe2d1e70d5742838c88cb2cf492fc201d39e056f7e0335b6040516001600160a01b03909116815260200160405180910390a2909890975095505050505050565b611148813361069e565b6111bc576040805162461bcd60e51b81526020600482015260248101919091527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e606482015260840161073f565b6111c68133611e3e565b6111cf336107d8565b156112425760405162461bcd60e51b815260206004820152603760248201527f4d617267696e4c6f6e6752657061793a205265706179696e6720706f7369746960448201527f6f6e2070757473206163636f756e74206174207269736b000000000000000000606482015260840161073f565b604080516001600160a01b0383168152905133917f7d361c02aa3e26ac9383eca42a9b4f42433e252882bfb806e8b76869b815250f919081900360200190a250565b6000546001600160a01b031633146112ae5760405162461bcd60e51b815260040161073f90613404565b60005b8251811015610cf8578181815181106112cc576112cc61346b565b6020026020010151600460008584815181106112ea576112ea61346b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611326816133e9565b9150506112b1565b60008061133a83611e93565b90506000805b825181101561070d5761136f6106f28483815181106113615761136161346b565b602002602001015187611755565b91508061137b816133e9565b915050611340565b6001600160a01b038082166000908152600760209081526040808320938616835260059093019052205492915050565b6113bc336103b4565b6114385760405162461bcd60e51b815260206004820152604160248201527f4d617267696e4c6f6e6752657061793a2043616e6e6f7420726570617920616360448201527f636f756e742077697468206e6f206c657665726167656420706f736974696f6e6064820152607360f81b608482015260a40161073f565b61144133611eba565b60405133907f2a5e2bc4fa361e17232a0638ac48c9dd4aed21e3241a5bac60bb30f4d505344690600090a2565b60008061147a83611e93565b90506000805b825181101561070d576114af6106f28483815181106114a1576114a161346b565b602002602001015187610cfd565b9150806114bb816133e9565b915050611480565b6060806114cf836107d8565b6115315760405162461bcd60e51b815260206004820152602d60248201527f4d617267696e4c6f6e6752657061793a2054686973206163636f756e7420636160448201526c1b9b9bdd081899481c995cd95d609a1b606482015260840161073f565b61153a83611eba565b6000611545846106b5565b9050600080611557600e54600f549091565b9092509050600061156c8261105686866119a2565b905060008061157b8333611db8565b9150915060005b82518110156115a65761159433611080565b8061159e816133e9565b915050611582565b506001600160a01b0389167fa5df7b378f5dbf7c276ac35d5314c533b2fa1d772a893f471c41481862ec93db33611115565b6001600160a01b038082166000908152600760209081526040808320938616835260029093019052205492915050565b6000546001600160a01b031633146116325760405162461bcd60e51b815260040161073f90613404565b600b55565b6000546001600160a01b031633146116615760405162461bcd60e51b815260040161073f90613404565b600a55565b6001600160a01b038116600090815260076020526040812081805b600483015481101561070d576116a66106f26116a060038601846118d0565b87611ed5565b9150806116b2816133e9565b915050611681565b6000546001600160a01b031633146116e45760405162461bcd60e51b815260040161073f90613404565b6001600160a01b0381166117495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161073f565b61175281611cf0565b50565b6000806117628484611ed5565b905060006117708585610cfd565b9050600081831115611783575081611786565b50805b6001546001600160a01b031663d0b9622c87836117cb828a6001600160a01b039081166000908152600760208181526040808420959094168352930190925290205490565b6040516001600160e01b031960e086901b1681526001600160a01b039093166004840152602483019190915260448201526064015b60206040518083038186803b15801561181857600080fd5b505afa15801561182c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118509190613452565b9695505050505050565b6001600160a01b03811660009081526007602052604081206008015461188257506000919050565b6000806118926008546009549091565b915091506000806118a286610daf565b909250905060006118b385836119a2565b905060006118c184866119a2565b90911015979650505050505050565b60008260010182815481106118e7576118e761346b565b6000918252602090912001546001600160a01b03169392505050565b6002546000906001600160a01b031663b1d5e1b98461192281866115d8565b6040518363ffffffff1660e01b815260040161193f929190613439565b60206040518083038186803b15801561195757600080fd5b505afa15801561196b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198f9190613452565b9392505050565b600061198f8284613481565b600061198f8284613499565b611752600c82611ef4565b6001600160a01b0380821660009081526007602090815260408083209387168352600584019091529020541580156119f057508215155b15611a0757611a026003820185611fba565b611a40565b6001600160a01b038416600090815260058201602052604090205415801590611a2e575082155b15611a4057611a406003820185612024565b6001600160a01b0384166000908152600580830160209081526040808420549290915290912054611a99918691611a7d9187916109b39190610e87565b6001600160a01b03909116600090815260056020526040902055565b6001600160a01b03841660009081526005820160205260409020546008820154611ac89185916109b391611d40565b60088201556001600160a01b039093166000908152600590930160205250604090912055565b6001600160a01b039081166000908152600760209081526040808320959093168252600690940190935290912055565b606081600101805480602002602001604051908101604052809291908181526020018280548015611b7857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b5a575b50505050509050919050565b6040516001600160a01b0380851660248301528316604482015260648101829052611bef9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612170565b50505050565b6001600160a01b038082166000908152600760209081526040808320938716835260028401909152902054158015611c2c57508215155b15611c4057611c3b8185611fba565b611c76565b6001600160a01b038416600090815260028201602052604090205415801590611c67575082155b15611c7657611c768185612024565b6001600160a01b0384166000908152600282016020908152604080832054600690925290912054611ccf918691611cb39187916109b39190610e87565b6001600160a01b03909116600090815260066020526040902055565b6001600160a01b039093166000908152600290930160205250604090912055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061198f82846134b8565b60405181151560248201526117529060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b179052612242565b610cf88363a9059cbb60e01b8484604051602401611bb8929190613439565b600061198f82846134cf565b6060806000611dc684612263565b90506000815167ffffffffffffffff811115611de457611de4613187565b604051908082528060200260200182016040528015611e0d578160200160208202803683370190505b5090506000611e1f8787858585612287565b5091969095509350505050565b611e3581612471565b61175281612593565b611e488282612612565b15611e5c57611e578282612653565b611e66565b611e668282612761565b6001600160a01b038116600090815260076020526040902060080154611e8f57611e8f81612867565b5050565b6001600160a01b03811660009081526007602052604090206060906106af90600301611b1e565b611ec381612872565b611ecc816128e8565b61175281612867565b6002546000906001600160a01b031663b1d5e1b9846119228186611383565b611efe8282612a97565b15611f625760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320616c7265616479206578697360448201526d3a399034b7103a34329039b2ba1760911b606482015260840161073f565b6001828101805480830182556000828152602090200180546001600160a01b0319166001600160a01b03851617905554611f9c91906134b8565b6001600160a01b039091166000908152602092909252604090912055565b611fc48282612a97565b15611f625760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b61202e8282612a97565b61208d5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e5365743a20546f6b656e20646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b606482015260840161073f565b600182810180546000926120a0916134b8565b815481106120b0576120b061346b565b60009182526020808320909101546001600160a01b038581168452918690526040808420549290911680845292208190556001850180549293509091839190839081106120ff576120ff61346b565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918516815290859052604081205560018401805480612148576121486134f1565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b60006121c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612af89092919063ffffffff16565b805190915015610cf857808060200190518101906121e39190613507565b610cf85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161073f565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b03811660009081526007602052604090206060906106af90611b1e565b60005b60008611801561229a5750835182105b156124685760006122c48584815181106122b6576122b661346b565b6020026020010151876115d8565b905060006122eb8685815181106122dd576122dd61346b565b602002602001015188611903565b90508781101561235757818585815181106123085761230861346b565b6020026020010181815250506123398685815181106123295761232961346b565b6020026020010151600089611bf5565b6123438882611d40565b9750612350846001611996565b9350612461565b60025486516000916001600160a01b0316906395f881c9908990889081106123815761238161346b565b60200260200101518b6040518363ffffffff1660e01b81526004016123a7929190613439565b60206040518083038186803b1580156123bf57600080fd5b505afa1580156123d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123f79190613452565b9050828111156124045750815b808686815181106124175761241761346b565b6020026020010181815250506124598786815181106124385761243861346b565b60200260200101516124538386611d4090919063ffffffff16565b8a611bf5565b505050612468565b505061228a565b50949350505050565b600061247c82611e93565b905060005b81518110156125895760015482516001600160a01b039091169063bffe84c2908490849081106124b3576124b361346b565b60200260200101516124de8585815181106124d0576124d061346b565b602002602001015187611383565b6040518363ffffffff1660e01b81526004016124fb929190613439565b600060405180830381600087803b15801561251557600080fd5b505af1158015612529573d6000803e3d6000fd5b505050506125528282815181106125425761254261346b565b6020026020010151600085611aee565b6125778282815181106125675761256761346b565b60200260200101516000856119b9565b80612581816133e9565b915050612481565b50611e8f82612867565b600061259e82612263565b905060006125ab83612b0f565b90506125b78282612bc4565b60005b8251811015611bef576126008382815181106125d8576125d861346b565b60200260200101518383815181106125f2576125f261346b565b602002602001015186611bf5565b8061260a816133e9565b9150506125ba565b60008061261f8484611ed5565b9050600061262d8585610cfd565b9050600061263b8686611755565b90506126478282611996565b90921195945050505050565b600061265f8383612cfe565b6001549091506001600160a01b031663bffe84c28461267e8186611383565b6040518363ffffffff1660e01b815260040161269b929190613439565b600060405180830381600087803b1580156126b557600080fd5b505af11580156126c9573d6000803e3d6000fd5b505060015460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a391506126ff9086908590600401613439565b600060405180830381600087803b15801561271957600080fd5b505af115801561272d573d6000803e3d6000fd5b5050505061273d83600084611aee565b612749836000846119b9565b610cf88361275b836109b387876115d8565b84611bf5565b600061276c82612263565b90506000815167ffffffffffffffff81111561278a5761278a613187565b6040519080825280602002602001820160405280156127b3578160200160208202803683370190505b50905060006127c28585612d67565b90506127d2818585856000612287565b506127dd8383612bc4565b6001546001600160a01b031663bffe84c2866127f98188611383565b6040518363ffffffff1660e01b8152600401612816929190613439565b600060405180830381600087803b15801561283057600080fd5b505af1158015612844573d6000803e3d6000fd5b50505050612854856000866119b9565b61286085600086611aee565b5050505050565b611752600c82612da0565b600061287d82611e93565b905060005b8151811015610cf8576128ae8282815181106128a0576128a061346b565b602002602001015184612612565b156128d6576128d68282815181106128c8576128c861346b565b602002602001015184612653565b806128e0816133e9565b915050612882565b60006128f382611e93565b9050600061290083612263565b90506000815167ffffffffffffffff81111561291e5761291e613187565b604051908082528060200260200182016040528015612947578160200160208202803683370190505b5090506000805b8451811015612a8c57600061297c86838151811061296e5761296e61346b565b602002602001015188612d67565b905061298b8188878787612287565b60015487519194506001600160a01b03169063bffe84c2908890859081106129b5576129b561346b565b60200260200101516129e08986815181106129d2576129d261346b565b60200260200101518b611383565b6040518363ffffffff1660e01b81526004016129fd929190613439565b600060405180830381600087803b158015612a1757600080fd5b505af1158015612a2b573d6000803e3d6000fd5b50505050612a54868381518110612a4457612a4461346b565b60200260200101516000896119b9565b612a79868381518110612a6957612a6961346b565b6020026020010151600089611aee565b5080612a84816133e9565b91505061294e565b506128608383612bc4565b6001820154600090612aab575060006106af565b6001600160a01b0382166000818152602085905260409020546001850180549091908110612adb57612adb61346b565b6000918252602090912001546001600160a01b0316149392505050565b6060612b078484600085612e0d565b949350505050565b60606000612b1c83612263565b90506000815167ffffffffffffffff811115612b3a57612b3a613187565b604051908082528060200260200182016040528015612b63578160200160208202803683370190505b50905060005b825181101561070d57612b95838281518110612b8757612b8761346b565b6020026020010151866115d8565b828281518110612ba757612ba761346b565b602090810291909101015280612bbc816133e9565b915050612b69565b60005b8251811015610cf8576000828281518110612be457612be461346b565b60200260200101511115612cec576001548251612c51916001600160a01b031690849084908110612c1757612c1761346b565b6020026020010151858481518110612c3157612c3161346b565b60200260200101516001600160a01b0316612f359092919063ffffffff16565b60015483516001600160a01b03909116906347e7ef2490859084908110612c7a57612c7a61346b565b6020026020010151848481518110612c9457612c9461346b565b60200260200101516040518363ffffffff1660e01b8152600401612cb9929190613439565b600060405180830381600087803b158015612cd357600080fd5b505af1158015612ce7573d6000803e3d6000fd5b505050505b80612cf6816133e9565b915050612bc7565b600080612d0b8484611ed5565b90506000612d198585610cfd565b90506000612d278686611755565b6002549091506001600160a01b031663468cde7287612d4a84610e878888611d40565b6040518363ffffffff1660e01b8152600401611800929190613439565b600080612d748484611ed5565b90506000612d828585610cfd565b90506000612d908686611755565b905061185083610e878484611996565b612daa8282612a97565b61208d5760405162461bcd60e51b815260206004820152602e60248201527f416464726573735365743a204164647265737320646f6573206e6f742065786960448201526d39ba1034b7103a34329039b2ba1760911b606482015260840161073f565b606082471015612e6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161073f565b843b612ebc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161073f565b600080866001600160a01b03168587604051612ed89190613550565b60006040518083038185875af1925050503d8060008114612f15576040519150601f19603f3d011682016040523d82523d6000602084013e612f1a565b606091505b5091509150612f2a828286613048565b979650505050505050565b801580612fbe5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015612f8457600080fd5b505afa158015612f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbc9190613452565b155b6130295760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161073f565b610cf88363095ea7b360e01b8484604051602401611bb8929190613439565b6060831561305757508161198f565b8251156130675782518084602001fd5b8160405162461bcd60e51b815260040161073f919061356c565b6001600160a01b038116811461175257600080fd5b600080604083850312156130a957600080fd5b82356130b481613081565b915060208301356130c481613081565b809150509250929050565b6000602082840312156130e157600080fd5b813561198f81613081565b600080604083850312156130ff57600080fd5b50508035926020909101359150565b6000806040838503121561312157600080fd5b823561312c81613081565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561317b5783516001600160a01b031683529284019291840191600101613156565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156131c6576131c6613187565b604052919050565b600067ffffffffffffffff8211156131e8576131e8613187565b5060051b60200190565b801515811461175257600080fd5b600082601f83011261321157600080fd5b81356020613226613221836131ce565b61319d565b82815260059290921b8401810191818101908684111561324557600080fd5b8286015b8481101561326957803561325c816131f2565b8352918301918301613249565b509695505050505050565b6000806040838503121561328757600080fd5b823567ffffffffffffffff8082111561329f57600080fd5b818501915085601f8301126132b357600080fd5b813560206132c3613221836131ce565b82815260059290921b840181019181810190898411156132e257600080fd5b948201945b838610156133095785356132fa81613081565b825294820194908201906132e7565b9650508601359250508082111561331f57600080fd5b5061332c85828601613200565b9150509250929050565b604080825283519082018190526000906020906060840190828701845b828110156133785781516001600160a01b031684529284019290840190600101613353565b5050508381038285015284518082528583019183019060005b818110156133ad57835183529284019291840191600101613391565b5090979650505050505050565b6000602082840312156133cc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156133fd576133fd6133d3565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03929092168252602082015260400190565b60006020828403121561346457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008219821115613494576134946133d3565b500190565b60008160001904831182151516156134b3576134b36133d3565b500290565b6000828210156134ca576134ca6133d3565b500390565b6000826134ec57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561351957600080fd5b815161198f816131f2565b60005b8381101561353f578181015183820152602001613527565b83811115611bef5750506000910152565b60008251613562818460208701613524565b9190910192915050565b602081526000825180602084015261358b816040850160208701613524565b601f01601f1916919091016040019291505056fea26469706673582212204bee7782d7cb106d045843a369f4cdd0727d3a09e625129d415600673fd0fecc64736f6c63430008090033";

type MarginLongConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginLongConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginLong__factory extends ContractFactory {
  constructor(...args: MarginLongConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarginLong";
  }

  deploy(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarginLong> {
    return super.deploy(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    ) as Promise<MarginLong>;
  }
  getDeployTransaction(
    pool_: string,
    oracle_: string,
    minMarginLevelPercentNumerator_: BigNumberish,
    minMarginLevelPercentDenominator_: BigNumberish,
    minCollateralPrice_: BigNumberish,
    maxLeverage_: BigNumberish,
    liquidationFeePercentNumerator_: BigNumberish,
    liquidationFeePercentDenominator_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      oracle_,
      minMarginLevelPercentNumerator_,
      minMarginLevelPercentDenominator_,
      minCollateralPrice_,
      maxLeverage_,
      liquidationFeePercentNumerator_,
      liquidationFeePercentDenominator_,
      overrides || {}
    );
  }
  attach(address: string): MarginLong {
    return super.attach(address) as MarginLong;
  }
  connect(signer: Signer): MarginLong__factory {
    return super.connect(signer) as MarginLong__factory;
  }
  static readonly contractName: "MarginLong";
  public readonly contractName: "MarginLong";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginLongInterface {
    return new utils.Interface(_abi) as MarginLongInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarginLong {
    return new Contract(address, _abi, signerOrProvider) as MarginLong;
  }
}
