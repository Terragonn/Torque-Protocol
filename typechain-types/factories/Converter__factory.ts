/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161129038038061129083398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6111a4806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c0c3d39711610071578063c0c3d39714610129578063c0d786551461013c578063d868e12d1461014f578063f2fde38b14610162578063f887ea4014610175578063fcf5ee8d1461018857600080fd5b8063715018a6146100ae57806373a1abe0146100b85780638da5cb5b146100de5780639994f75e14610103578063bd046e1a14610116575b600080fd5b6100b661019b565b005b6100cb6100c6366004610df1565b6101da565b6040519081526020015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d5565b6100cb610111366004610e33565b610374565b6100cb610124366004610e74565b61048b565b6100cb610137366004610e74565b610518565b6100b661014a366004610ea0565b6105aa565b6100cb61015d366004610df1565b6105f6565b6100b6610170366004610ea0565b6106d3565b6001546100eb906001600160a01b031681565b6100cb610196366004610e74565b61076e565b6000546001600160a01b031633146101ce5760405162461bcd60e51b81526004016101c590610ebd565b60405180910390fd5b6101d86000610944565b565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061021357610213610f08565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061024757610247610f08565b6001600160a01b03928316602091820292909201015261026b908616333087610994565b600154610285906001600160a01b03878116911686610a05565b6102b26040518060400160405280600c81526020016b4d616465206974206865726560a01b815250610b2e565b6001546000906001600160a01b03166338ed1739868385336102d5426001610f1e565b6040518663ffffffff1660e01b81526004016102f5959493929190610f88565b600060405180830381600087803b15801561030f57600080fd5b505af1158015610323573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034b9190810190610fc4565b60018151811061035d5761035d610f08565b6020026020010151905080925050505b9392505050565b6040805160028082526060820183526000928392919060208301908036833701905050905084816000815181106103ad576103ad610f08565b60200260200101906001600160a01b031690816001600160a01b03168152505083816001815181106103e1576103e1610f08565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca74906104259087908690600401611082565b60006040518083038186803b15801561043d57600080fd5b505afa158015610451573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104799190810190610fc4565b60008151811061035d5761035d610f08565b600061036d8383600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061109b565b600061036d83600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561056c57600080fd5b505afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a4919061109b565b84610374565b6000546001600160a01b031633146105d45760405162461bcd60e51b81526004016101c590610ebd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061062f5761062f610f08565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061066357610663610f08565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f906106a79088908690600401611082565b60006040518083038186803b1580156106bf57600080fd5b505afa158015610323573d6000803e3d6000fd5b6000546001600160a01b031633146106fd5760405162461bcd60e51b81526004016101c590610ebd565b6001600160a01b0381166107625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b61076b81610944565b50565b6040805160028082526060820183526000928392919060208301908036833701905050905083816000815181106107a7576107a7610f08565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156107fb57600080fd5b505afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610833919061109b565b8160018151811061084657610846610f08565b6001600160a01b03928316602091820292909201015261086a908516333086610994565b600154610884906001600160a01b03868116911685610a05565b6001546000906001600160a01b03166318cbafe5858385336108a7426001610f1e565b6040518663ffffffff1660e01b81526004016108c7959493929190610f88565b600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091d9190810190610fc4565b60018151811061092f5761092f610f08565b60200260200101519050809250505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526109ff9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b71565b50505050565b801580610a8e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610a5457600080fd5b505afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c91906110b8565b155b610af95760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101c5565b6040516001600160a01b038316602482015260448101829052610b2990849063095ea7b360e01b906064016109c8565b505050565b61076b81604051602401610b4291906110fd565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610c43565b6000610bc6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c649092919063ffffffff16565b805190915015610b295780806020019051810190610be49190611130565b610b295760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060610c738484600085610c7b565b949350505050565b606082471015610cdc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101c5565b843b610d2a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b600080866001600160a01b03168587604051610d469190611152565b60006040518083038185875af1925050503d8060008114610d83576040519150601f19603f3d011682016040523d82523d6000602084013e610d88565b606091505b5091509150610d98828286610da3565b979650505050505050565b60608315610db257508161036d565b825115610dc25782518084602001fd5b8160405162461bcd60e51b81526004016101c591906110fd565b6001600160a01b038116811461076b57600080fd5b600080600060608486031215610e0657600080fd5b8335610e1181610ddc565b9250602084013591506040840135610e2881610ddc565b809150509250925092565b600080600060608486031215610e4857600080fd5b8335610e5381610ddc565b92506020840135610e6381610ddc565b929592945050506040919091013590565b60008060408385031215610e8757600080fd5b8235610e9281610ddc565b946020939093013593505050565b600060208284031215610eb257600080fd5b813561036d81610ddc565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008219821115610f3f57634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b83811015610f7d5781516001600160a01b031687529582019590820190600101610f58565b509495945050505050565b85815284602082015260a060408201526000610fa760a0830186610f44565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610fd757600080fd5b825167ffffffffffffffff80821115610fef57600080fd5b818501915085601f83011261100357600080fd5b81518181111561101557611015610ef2565b8060051b604051601f19603f8301168101818110858211171561103a5761103a610ef2565b60405291825284820192508381018501918883111561105857600080fd5b938501935b828510156110765784518452938501939285019261105d565b98975050505050505050565b828152604060208201526000610c736040830184610f44565b6000602082840312156110ad57600080fd5b815161036d81610ddc565b6000602082840312156110ca57600080fd5b5051919050565b60005b838110156110ec5781810151838201526020016110d4565b838111156109ff5750506000910152565b602081526000825180602084015261111c8160408501602087016110d1565b601f01601f19169190910160400192915050565b60006020828403121561114257600080fd5b8151801515811461036d57600080fd5b600082516111648184602087016110d1565b919091019291505056fea2646970667358221220be7a05d99d4d25efc6a5965c88115727f6fc38e1d3bcf98a917c60a8a6ca68ee64736f6c63430008090033";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
