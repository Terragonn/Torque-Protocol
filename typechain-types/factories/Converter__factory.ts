/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516111ff3803806111ff83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611113806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063c0c3d39711610071578063c0c3d39714610129578063c0d786551461013c578063d868e12d1461014f578063f2fde38b14610162578063f887ea4014610175578063fcf5ee8d1461018857600080fd5b8063715018a6146100ae57806373a1abe0146100b85780638da5cb5b146100de5780639994f75e14610103578063bd046e1a14610116575b600080fd5b6100b661019b565b005b6100cb6100c6366004610d60565b6101da565b6040519081526020015b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d5565b6100cb610111366004610da2565b610347565b6100cb610124366004610de3565b61045e565b6100cb610137366004610de3565b6104eb565b6100b661014a366004610e0f565b61057d565b6100cb61015d366004610d60565b6105c9565b6100b6610170366004610e0f565b6106a6565b6001546100eb906001600160a01b031681565b6100cb610196366004610de3565b610741565b6000546001600160a01b031633146101ce5760405162461bcd60e51b81526004016101c590610e2c565b60405180910390fd5b6101d86000610917565b565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061021357610213610e77565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061024757610247610e77565b6001600160a01b03928316602091820292909201015261026b908616333087610967565b600154610285906001600160a01b038781169116866109d8565b6001546000906001600160a01b03166338ed1739868385336102a8426001610e8d565b6040518663ffffffff1660e01b81526004016102c8959493929190610ef7565b600060405180830381600087803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261031e9190810190610f33565b60018151811061033057610330610e77565b6020026020010151905080925050505b9392505050565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061038057610380610e77565b60200260200101906001600160a01b031690816001600160a01b03168152505083816001815181106103b4576103b4610e77565b6001600160a01b0392831660209182029290920101526001546040516307c0329d60e21b81526000929190911690631f00ca74906103f89087908690600401610ff1565b60006040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261044c9190810190610f33565b60008151811061033057610330610e77565b60006103408383600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d919061100a565b600061034083600160009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561053f57600080fd5b505afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610577919061100a565b84610347565b6000546001600160a01b031633146105a75760405162461bcd60e51b81526004016101c590610e2c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061060257610602610e77565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061063657610636610e77565b6001600160a01b03928316602091820292909201015260015460405163d06ca61f60e01b8152600092919091169063d06ca61f9061067a9088908690600401610ff1565b60006040518083038186803b15801561069257600080fd5b505afa1580156102f6573d6000803e3d6000fd5b6000546001600160a01b031633146106d05760405162461bcd60e51b81526004016101c590610e2c565b6001600160a01b0381166107355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b61073e81610917565b50565b60408051600280825260608201835260009283929190602083019080368337019050509050838160008151811061077a5761077a610e77565b6001600160a01b03928316602091820292909201810191909152600154604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610806919061100a565b8160018151811061081957610819610e77565b6001600160a01b03928316602091820292909201015261083d908516333086610967565b600154610857906001600160a01b038681169116856109d8565b6001546000906001600160a01b03166318cbafe58583853361087a426001610e8d565b6040518663ffffffff1660e01b815260040161089a959493929190610ef7565b600060405180830381600087803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108f09190810190610f33565b60018151811061090257610902610e77565b60200260200101519050809250505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526109d29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b01565b50505050565b801580610a615750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610a2757600080fd5b505afa158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190611027565b155b610acc5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016101c5565b6040516001600160a01b038316602482015260448101829052610afc90849063095ea7b360e01b9060640161099b565b505050565b6000610b56826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bd39092919063ffffffff16565b805190915015610afc5780806020019051810190610b749190611040565b610afc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b6060610be28484600085610bea565b949350505050565b606082471015610c4b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101c5565b843b610c995760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b600080866001600160a01b03168587604051610cb5919061108e565b60006040518083038185875af1925050503d8060008114610cf2576040519150601f19603f3d011682016040523d82523d6000602084013e610cf7565b606091505b5091509150610d07828286610d12565b979650505050505050565b60608315610d21575081610340565b825115610d315782518084602001fd5b8160405162461bcd60e51b81526004016101c591906110aa565b6001600160a01b038116811461073e57600080fd5b600080600060608486031215610d7557600080fd5b8335610d8081610d4b565b9250602084013591506040840135610d9781610d4b565b809150509250925092565b600080600060608486031215610db757600080fd5b8335610dc281610d4b565b92506020840135610dd281610d4b565b929592945050506040919091013590565b60008060408385031215610df657600080fd5b8235610e0181610d4b565b946020939093013593505050565b600060208284031215610e2157600080fd5b813561034081610d4b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008219821115610eae57634e487b7160e01b600052601160045260246000fd5b500190565b600081518084526020808501945080840160005b83811015610eec5781516001600160a01b031687529582019590820190600101610ec7565b509495945050505050565b85815284602082015260a060408201526000610f1660a0830186610eb3565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610f4657600080fd5b825167ffffffffffffffff80821115610f5e57600080fd5b818501915085601f830112610f7257600080fd5b815181811115610f8457610f84610e61565b8060051b604051601f19603f83011681018181108582111715610fa957610fa9610e61565b604052918252848201925083810185019188831115610fc757600080fd5b938501935b82851015610fe557845184529385019392850192610fcc565b98975050505050505050565b828152604060208201526000610be26040830184610eb3565b60006020828403121561101c57600080fd5b815161034081610d4b565b60006020828403121561103957600080fd5b5051919050565b60006020828403121561105257600080fd5b8151801515811461034057600080fd5b60005b8381101561107d578181015183820152602001611065565b838111156109d25750506000910152565b600082516110a0818460208701611062565b9190910192915050565b60208152600082518060208401526110c9816040850160208701611062565b601f01601f1916919091016040019291505056fea26469706673582212204514df3f98aebffd2639d5d26d0f4613f244a88b5c3f80319970348ac087a0f464736f6c63430008090033";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
