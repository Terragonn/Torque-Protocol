/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Converter, ConverterInterface } from "../Converter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "maxAmountEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "maxAmountTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    name: "minAmountTokenInTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract UniswapV2Router02",
        name: "router_",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "swapMaxEthOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapMaxTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type ConverterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConverterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Converter__factory extends ContractFactory {
  constructor(...args: ConverterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Converter";
  }

  deploy(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Converter> {
    return super.deploy(router_, overrides || {}) as Promise<Converter>;
  }
  getDeployTransaction(
    router_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  attach(address: string): Converter {
    return super.attach(address) as Converter;
  }
  connect(signer: Signer): Converter__factory {
    return super.connect(signer) as Converter__factory;
  }
  static readonly contractName: "Converter";
  public readonly contractName: "Converter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConverterInterface {
    return new utils.Interface(_abi) as ConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Converter {
    return new Contract(address, _abi, signerOrProvider) as Converter;
  }
}
