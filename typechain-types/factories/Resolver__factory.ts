/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Resolver, ResolverInterface } from "../Resolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pokeMe_",
        type: "address",
      },
      {
        internalType: "contract MarginLong",
        name: "marginLong_",
        type: "address",
      },
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IConverter",
        name: "converter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkReset",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "converter",
    outputs: [
      {
        internalType: "contract IConverter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeReset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gelato",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginLong",
    outputs: [
      {
        internalType: "contract MarginLong",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokeMe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract LPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200181138038062001811833981016040819052620000349162000128565b83806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663573ea5756040518163ffffffff1660e01b815260040160206040518083038186803b1580156200008957600080fd5b505afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000190565b6001600160a01b0390811660a052600080546001600160a01b0319908116968316969096179055600180548616948216949094179093555060028054909316911617905550620001b7565b6001600160a01b03811681146200012557600080fd5b50565b600080600080608085870312156200013f57600080fd5b84516200014c816200010f565b60208601519094506200015f816200010f565b604086015190935062000172816200010f565b606086015190925062000185816200010f565b939692955090935050565b600060208284031215620001a357600080fd5b8151620001b0816200010f565b9392505050565b60805160a051611612620001ff6000396000818160ed01528181610ea60152610f6b015260008181610186015281816101b3015281816104bd01526106da01526116126000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638322fff2116100665780638322fff21461013857806386f041ba14610153578063ae8cb76314610166578063bd38837b1461016e578063c84eee0d1461018157600080fd5b806316f0115b146100a35780635509708c146100d3578063573ea575146100e857806358b272161461010f5780637e0b09b114610125575b600080fd5b6001546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004611226565b6101a8565b005b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b6101176102b7565b6040516100ca92919061129f565b6100e6610133366004611226565b6104b2565b6100b673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6000546100b6906001600160a01b031681565b610117610557565b6002546100b6906001600160a01b031681565b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461021f5760405162461bcd60e51b8152602060048201526017602482015276506f6b654d6552656164793a206f6e6c79506f6b654d6560481b60448201526064015b60405180910390fd5b600080546040516365189a7b60e11b81526001600160a01b0384811660048301528392169063ca3134f6906024015b600060405180830381600087803b15801561026857600080fd5b505af115801561027c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a49190810190611390565b915091506102b282826106d5565b505050565b6000606060008060009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103469190810190611455565b905060005b81518110156104965760005482516001600160a01b039091169063ffec70af9084908490811061037d5761037d6114e4565b60200260200101516040518263ffffffff1660e01b81526004016103b091906001600160a01b0391909116815260200190565b60206040518083038186803b1580156103c857600080fd5b505afa1580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040091906114fa565b156104845760019350637e0b09b160e01b828281518110610423576104236114e4565b602002602001015160405160240161044a91906001600160a01b0391909116815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152939492505050565b8061048e81611532565b91505061034b565b5060006040518060200160405280600081525092509250509091565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105245760405162461bcd60e51b8152602060048201526017602482015276506f6b654d6552656164793a206f6e6c79506f6b654d6560481b6044820152606401610216565b60008054604051638ac5d4a360e01b81526001600160a01b03848116600483015283921690638ac5d4a39060240161024e565b6000606060008060009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e69190810190611455565b905060005b81518110156104965760005482516001600160a01b0390911690632dbaacdc9084908490811061061d5761061d6114e4565b60200260200101516040518263ffffffff1660e01b815260040161065091906001600160a01b0391909116815260200190565b60206040518083038186803b15801561066857600080fd5b505afa15801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a091906114fa565b156106c35760019350635509708c60e01b828281518110610423576104236114e4565b806106cd81611532565b9150506105eb565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b810c6366040518163ffffffff1660e01b8152600401604080518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610768919061154d565b9150915060005b8451811015610bd35760025485516000916001600160a01b03169063959de0bc908890859081106107a2576107a26114e4565b60200260200101518785815181106107bc576107bc6114e4565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0392831660048201526024810191909152908616604482015260640160206040518083038186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e919061157d565b905083811115610a895760025486516000916001600160a01b03169063d6e3777790899086908110610882576108826114e4565b60200260200101518689878151811061089d5761089d6114e4565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152604482015260640160206040518083038186803b1580156108f557600080fd5b505afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d919061157d565b905061097b600260009054906101000a90046001600160a01b03168289868151811061095b5761095b6114e4565b60200260200101516001600160a01b0316610d139092919063ffffffff16565b60025487516001600160a01b03909116906305c0d09a908990869081106109a4576109a46114e4565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b039182166004820152602481018590529087166044820152606401602060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a37919061157d565b50610a6481878581518110610a4e57610a4e6114e4565b6020026020010151610e6a90919063ffffffff16565b868481518110610a7657610a766114e4565b6020026020010181815250505050610bd3565b6002548551610ac8916001600160a01b031690879085908110610aae57610aae6114e4565b602002602001015188858151811061095b5761095b6114e4565b60025486516001600160a01b03909116906305c0d09a90889085908110610af157610af16114e4565b6020026020010151878581518110610b0b57610b0b6114e4565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b03928316600482015260248101919091529086166044820152606401602060405180830381600087803b158015610b6757600080fd5b505af1158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f919061157d565b506000858381518110610bb457610bb46114e4565b6020026020010181815250505080610bcb81611532565b91505061076f565b50610bde8282610e7d565b60005b8451811015610d0c576000848281518110610bfe57610bfe6114e4565b60200260200101511115610cfa576001548451610c4b916001600160a01b031690869084908110610c3157610c316114e4565b602002602001015187848151811061095b5761095b6114e4565b60015485516001600160a01b03909116906347e7ef2490879084908110610c7457610c746114e4565b6020026020010151868481518110610c8e57610c8e6114e4565b60200260200101516040518363ffffffff1660e01b8152600401610cc79291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b158015610ce157600080fd5b505af1158015610cf5573d6000803e3d6000fd5b505050505b80610d0481611532565b915050610be1565b5050505050565b801580610d9c5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610d6257600080fd5b505afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a919061157d565b155b610e075760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610216565b6040516001600160a01b0383166024820152604481018290526102b290849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f94565b6000610e768284611596565b9392505050565b6001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610f655760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360405160006040518083038185875af1925050503d8060008114610f0f576040519150601f19603f3d011682016040523d82523d6000602084013e610f14565b606091505b50509050806102b25760405162461bcd60e51b815260206004820152601e60248201527f5f7472616e736665723a20455448207472616e73666572206661696c656400006044820152606401610216565b610f90817f000000000000000000000000000000000000000000000000000000000000000084611066565b5050565b6000610fe9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110969092919063ffffffff16565b8051909150156102b2578080602001905181019061100791906114fa565b6102b25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610216565b6040516001600160a01b0383166024820152604481018290526102b290849063a9059cbb60e01b90606401610e33565b60606110a584846000856110ad565b949350505050565b60608247101561110e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610216565b843b61115c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610216565b600080866001600160a01b0316858760405161117891906115ad565b60006040518083038185875af1925050503d80600081146111b5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ba565b606091505b50915091506111ca8282866111d5565b979650505050505050565b606083156111e4575081610e76565b8251156111f45782518084602001fd5b8160405162461bcd60e51b815260040161021691906115c9565b6001600160a01b038116811461122357600080fd5b50565b60006020828403121561123857600080fd5b8135610e768161120e565b60005b8381101561125e578181015183820152602001611246565b8381111561126d576000848401525b50505050565b6000815180845261128b816020860160208601611243565b601f01601f19169290920160200192915050565b82151581526040602082015260006110a56040830184611273565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112f9576112f96112ba565b604052919050565b600067ffffffffffffffff82111561131b5761131b6112ba565b5060051b60200190565b600082601f83011261133657600080fd5b8151602061134b61134683611301565b6112d0565b82815260059290921b8401810191818101908684111561136a57600080fd5b8286015b84811015611385578051835291830191830161136e565b509695505050505050565b600080604083850312156113a357600080fd5b825167ffffffffffffffff808211156113bb57600080fd5b818501915085601f8301126113cf57600080fd5b815160206113df61134683611301565b82815260059290921b840181019181810190898411156113fe57600080fd5b948201945b838610156114255785516114168161120e565b82529482019490820190611403565b9188015191965090935050508082111561143e57600080fd5b5061144b85828601611325565b9150509250929050565b6000602080838503121561146857600080fd5b825167ffffffffffffffff81111561147f57600080fd5b8301601f8101851361149057600080fd5b805161149e61134682611301565b81815260059190911b820183019083810190878311156114bd57600080fd5b928401925b828410156111ca5783516114d58161120e565b825292840192908401906114c2565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561150c57600080fd5b81518015158114610e7657600080fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156115465761154661151c565b5060010190565b6000806040838503121561156057600080fd5b8251915060208301516115728161120e565b809150509250929050565b60006020828403121561158f57600080fd5b5051919050565b6000828210156115a8576115a861151c565b500390565b600082516115bf818460208701611243565b9190910192915050565b602081526000610e76602083018461127356fea2646970667358221220931863bb8b5a144b9ffe58297d1ff29354258e7c83d532bf9d4ae349df1ef89364736f6c63430008090033";

type ResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Resolver__factory extends ContractFactory {
  constructor(...args: ResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Resolver";
  }

  deploy(
    pokeMe_: string,
    marginLong_: string,
    pool_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Resolver> {
    return super.deploy(
      pokeMe_,
      marginLong_,
      pool_,
      converter_,
      overrides || {}
    ) as Promise<Resolver>;
  }
  getDeployTransaction(
    pokeMe_: string,
    marginLong_: string,
    pool_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pokeMe_,
      marginLong_,
      pool_,
      converter_,
      overrides || {}
    );
  }
  attach(address: string): Resolver {
    return super.attach(address) as Resolver;
  }
  connect(signer: Signer): Resolver__factory {
    return super.connect(signer) as Resolver__factory;
  }
  static readonly contractName: "Resolver";
  public readonly contractName: "Resolver";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResolverInterface {
    return new utils.Interface(_abi) as ResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Resolver {
    return new Contract(address, _abi, signerOrProvider) as Resolver;
  }
}
