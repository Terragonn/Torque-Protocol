/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Resolver, ResolverInterface } from "../Resolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pokeMe_",
        type: "address",
      },
      {
        internalType: "contract MarginLong",
        name: "marginLong_",
        type: "address",
      },
      {
        internalType: "contract LPool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IConverter",
        name: "converter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkLiquidate",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkReset",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "converter",
    outputs: [
      {
        internalType: "contract IConverter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "executeReset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gelato",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marginLong",
    outputs: [
      {
        internalType: "contract MarginLong",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pokeMe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract LPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001b5d38038062001b5d833981016040819052620000349162000128565b83806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663573ea5756040518163ffffffff1660e01b815260040160206040518083038186803b1580156200008957600080fd5b505afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000190565b6001600160a01b0390811660a052600180546001600160a01b0319908116968316969096179055600280548616948216949094179093555060008054909316911617905550620001b7565b6001600160a01b03811681146200012557600080fd5b50565b600080600080608085870312156200013f57600080fd5b84516200014c816200010f565b60208601519094506200015f816200010f565b604086015190935062000172816200010f565b606086015190925062000185816200010f565b939692955090935050565b600060208284031215620001a357600080fd5b8151620001b0816200010f565b9392505050565b60805160a05161196c620001f16000396000818160ed01528181611095015261115f01526000818161018601526105f9015261196c6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638322fff2116100665780638322fff21461013857806386f041ba14610153578063ae8cb76314610166578063bd38837b1461016e578063c84eee0d1461018157600080fd5b806316f0115b146100a35780635509708c146100d3578063573ea575146100e857806358b272161461010f5780637e0b09b114610125575b600080fd5b6002546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e1366004611584565b6101a8565b005b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b610117610243565b6040516100ca9291906115f9565b6100e6610133366004611584565b61043f565b6100b673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6001546100b6906001600160a01b031681565b610117610475565b6000546100b6906001600160a01b031681565b6100b67f000000000000000000000000000000000000000000000000000000000000000081565b6001546040516365189a7b60e11b81526001600160a01b038381166004830152600092839291169063ca3134f6906024015b600060405180830381600087803b1580156101f457600080fd5b505af1158015610208573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023091908101906116ea565b9150915061023e82826105f4565b505050565b600060606000600160009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561029757600080fd5b505afa1580156102ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d391908101906117af565b905060005b81518110156104235760015482516001600160a01b039091169063ffec70af9084908490811061030a5761030a61183e565b60200260200101516040518263ffffffff1660e01b815260040161033d91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561035557600080fd5b505afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190611854565b156104115760019350637e0b09b160e01b8282815181106103b0576103b061183e565b60200260200101516040516024016103d791906001600160a01b0391909116815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152939492505050565b8061041b8161188c565b9150506102d8565b5060006040518060200160405280600081525092509250509091565b600154604051638ac5d4a360e01b81526001600160a01b0383811660048301526000928392911690638ac5d4a3906024016101da565b600060606000600160009054906101000a90046001600160a01b03166001600160a01b0316636847e50b6040518163ffffffff1660e01b815260040160006040518083038186803b1580156104c957600080fd5b505afa1580156104dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261050591908101906117af565b905060005b81518110156104235760015482516001600160a01b0390911690632dbaacdc9084908490811061053c5761053c61183e565b60200260200101516040518263ffffffff1660e01b815260040161056f91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190611854565b156105e25760019350635509708c60e01b8282815181106103b0576103b061183e565b806105ec8161188c565b91505061050a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b810c6366040518163ffffffff1660e01b8152600401604080518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068791906118a7565b90925090506001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156106c1576106bc84848461082c565b6106cd565b6106cd84848385610c3d565b6106d7828261106c565b60005b84518110156108255760008482815181106106f7576106f761183e565b60200260200101511115610813576002548451610764916001600160a01b03169086908490811061072a5761072a61183e565b60200260200101518784815181106107445761074461183e565b60200260200101516001600160a01b03166111889092919063ffffffff16565b60025485516001600160a01b03909116906347e7ef249087908490811061078d5761078d61183e565b60200260200101518684815181106107a7576107a761183e565b60200260200101516040518363ffffffff1660e01b81526004016107e09291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b1580156107fa57600080fd5b505af115801561080e573d6000803e3d6000fd5b505050505b8061081d8161188c565b9150506106da565b5050505050565b60005b8351811015610c37576000805485516001600160a01b039091169063bd046e1a908790859081106108625761086261183e565b602002602001015186858151811061087c5761087c61183e565b60200260200101516040518363ffffffff1660e01b81526004016108b59291906001600160a01b03929092168252602082015260400190565b60206040518083038186803b1580156108cd57600080fd5b505afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090591906118d7565b905082811115610af6576000805486516001600160a01b039091169063c0c3d397908890869081106109395761093961183e565b6020026020010151866040518363ffffffff1660e01b81526004016109739291906001600160a01b03929092168252602082015260400190565b60206040518083038186803b15801561098b57600080fd5b505afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c391906118d7565b90506109ef60008054906101000a90046001600160a01b0316828886815181106107445761074461183e565b60005486516001600160a01b039091169063fcf5ee8d90889086908110610a1857610a1861183e565b6020026020010151836040518363ffffffff1660e01b8152600401610a529291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610a6c57600080fd5b505af1158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa491906118d7565b50610ad181868581518110610abb57610abb61183e565b60200260200101516112df90919063ffffffff16565b858481518110610ae357610ae361183e565b6020026020010181815250505050610c37565b6000548451610b35916001600160a01b031690869085908110610b1b57610b1b61183e565b60200260200101518785815181106107445761074461183e565b60005485516001600160a01b039091169063fcf5ee8d90879085908110610b5e57610b5e61183e565b6020026020010151868581518110610b7857610b7861183e565b60200260200101516040518363ffffffff1660e01b8152600401610bb19291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610bcb57600080fd5b505af1158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0391906118d7565b506000848381518110610c1857610c1861183e565b6020026020010181815250505080610c2f8161188c565b91505061082f565b50505050565b60005b8451811015610825576000805486516001600160a01b039091169063d868e12d90889085908110610c7357610c7361183e565b6020026020010151878581518110610c8d57610c8d61183e565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0392831660048201526024810191909152908716604482015260640160206040518083038186803b158015610ce757600080fd5b505afa158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f91906118d7565b905082811115610f22576000805487516001600160a01b0390911690639994f75e90899086908110610d5357610d5361183e565b602002602001015187898781518110610d6e57610d6e61183e565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152604482015260640160206040518083038186803b158015610dc657600080fd5b505afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe91906118d7565b9050610e2a60008054906101000a90046001600160a01b0316828986815181106107445761074461183e565b60005487516001600160a01b03909116906373a1abe090899086908110610e5357610e5361183e565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b039182166004820152602481018590529088166044820152606401602060405180830381600087803b158015610eae57600080fd5b505af1158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee691906118d7565b50610efd81878581518110610abb57610abb61183e565b868481518110610f0f57610f0f61183e565b6020026020010181815250505050610825565b6000548551610f61916001600160a01b031690879085908110610f4757610f4761183e565b60200260200101518885815181106107445761074461183e565b60005486516001600160a01b03909116906373a1abe090889085908110610f8a57610f8a61183e565b6020026020010151878581518110610fa457610fa461183e565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b03928316600482015260248101919091529087166044820152606401602060405180830381600087803b15801561100057600080fd5b505af1158015611014573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103891906118d7565b50600085838151811061104d5761104d61183e565b60200260200101818152505050806110648161188c565b915050610c40565b6001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156111595760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360405160006040518083038185875af1925050503d80600081146110fe576040519150601f19603f3d011682016040523d82523d6000602084013e611103565b606091505b505090508061023e5760405162461bcd60e51b815260206004820152601e60248201527f5f7472616e736665723a20455448207472616e73666572206661696c6564000060448201526064015b60405180910390fd5b611184817f0000000000000000000000000000000000000000000000000000000000000000846112f2565b5050565b8015806112115750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156111d757600080fd5b505afa1580156111eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120f91906118d7565b155b61127c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401611150565b6040516001600160a01b03831660248201526044810182905261023e90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611322565b60006112eb82846118f0565b9392505050565b6040516001600160a01b03831660248201526044810182905261023e90849063a9059cbb60e01b906064016112a8565b6000611377826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113f49092919063ffffffff16565b80519091501561023e57808060200190518101906113959190611854565b61023e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611150565b6060611403848460008561140b565b949350505050565b60608247101561146c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611150565b843b6114ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611150565b600080866001600160a01b031685876040516114d69190611907565b60006040518083038185875af1925050503d8060008114611513576040519150601f19603f3d011682016040523d82523d6000602084013e611518565b606091505b5091509150611528828286611533565b979650505050505050565b606083156115425750816112eb565b8251156115525782518084602001fd5b8160405162461bcd60e51b81526004016111509190611923565b6001600160a01b038116811461158157600080fd5b50565b60006020828403121561159657600080fd5b81356112eb8161156c565b60005b838110156115bc5781810151838201526020016115a4565b83811115610c375750506000910152565b600081518084526115e58160208601602086016115a1565b601f01601f19169290920160200192915050565b821515815260406020820152600061140360408301846115cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561165357611653611614565b604052919050565b600067ffffffffffffffff82111561167557611675611614565b5060051b60200190565b600082601f83011261169057600080fd5b815160206116a56116a08361165b565b61162a565b82815260059290921b840181019181810190868411156116c457600080fd5b8286015b848110156116df57805183529183019183016116c8565b509695505050505050565b600080604083850312156116fd57600080fd5b825167ffffffffffffffff8082111561171557600080fd5b818501915085601f83011261172957600080fd5b815160206117396116a08361165b565b82815260059290921b8401810191818101908984111561175857600080fd5b948201945b8386101561177f5785516117708161156c565b8252948201949082019061175d565b9188015191965090935050508082111561179857600080fd5b506117a58582860161167f565b9150509250929050565b600060208083850312156117c257600080fd5b825167ffffffffffffffff8111156117d957600080fd5b8301601f810185136117ea57600080fd5b80516117f86116a08261165b565b81815260059190911b8201830190838101908783111561181757600080fd5b928401925b8284101561152857835161182f8161156c565b8252928401929084019061181c565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561186657600080fd5b815180151581146112eb57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118a0576118a0611876565b5060010190565b600080604083850312156118ba57600080fd5b8251915060208301516118cc8161156c565b809150509250929050565b6000602082840312156118e957600080fd5b5051919050565b60008282101561190257611902611876565b500390565b600082516119198184602087016115a1565b9190910192915050565b6020815260006112eb60208301846115cd56fea26469706673582212202082989242d8731aafea066d523cffd715250fce9e88db391926ffa473df899664736f6c63430008090033";

type ResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Resolver__factory extends ContractFactory {
  constructor(...args: ResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Resolver";
  }

  deploy(
    pokeMe_: string,
    marginLong_: string,
    pool_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Resolver> {
    return super.deploy(
      pokeMe_,
      marginLong_,
      pool_,
      converter_,
      overrides || {}
    ) as Promise<Resolver>;
  }
  getDeployTransaction(
    pokeMe_: string,
    marginLong_: string,
    pool_: string,
    converter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pokeMe_,
      marginLong_,
      pool_,
      converter_,
      overrides || {}
    );
  }
  attach(address: string): Resolver {
    return super.attach(address) as Resolver;
  }
  connect(signer: Signer): Resolver__factory {
    return super.connect(signer) as Resolver__factory;
  }
  static readonly contractName: "Resolver";
  public readonly contractName: "Resolver";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResolverInterface {
    return new utils.Interface(_abi) as ResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Resolver {
    return new Contract(address, _abi, signerOrProvider) as Resolver;
  }
}
